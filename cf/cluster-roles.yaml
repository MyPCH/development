AWSTemplateFormatVersion: 2010-09-09
Description: Shared Resources
Parameters:
  ClusterName:
    Type: String
  NodeGroupStackName:
    Type: String
Resources:
  KiamServerManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: 
        Fn::Sub: "/cluster/${ClusterName}/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action: sts:AssumeRole
          Resource: "*"
  KiamServerRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: "kiam-server-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            AWS: 
              Fn::ImportValue:
                Fn::Sub: "${NodeGroupStackName}::InstanceRoleARN"
          Action: sts:AssumeRole
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Path: 
        Fn::Sub: "/cluster/${ClusterName}/"
      ManagedPolicyArns:
        - !Ref KiamServerManagedPolicy
  DNSManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: 
        Fn::Sub: "/cluster/${ClusterName}/"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action: route53:ChangeResourceRecordSets
          Resource: arn:aws:route53:::hostedzone/*
        - Effect: Allow
          Action:
          - route53:GetChange
          - route53:ListHostedZones
          - route53:ListResourceRecordSets
          - route53:ListHostedZonesByName
          Resource: "*"
  ExternalDNSRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "externalDNS-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            AWS: 
              Fn::GetAtt:
              - KiamServerRole
              - "Arn"
      Path: 
        Fn::Sub: "/cluster/${ClusterName}/"
      ManagedPolicyArns:
        - !Ref DNSManagedPolicy
  CertManagerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "certmanager-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            AWS: 
              Fn::GetAtt:
              - KiamServerRole
              - "Arn"
      Path: 
        Fn::Sub: "/cluster/${ClusterName}/"
      ManagedPolicyArns:
        - !Ref DNSManagedPolicy
  AutoscalerManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Path: 
        Fn::Sub: "/cluster/${ClusterName}/"
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - autoscaling:DescribeAutoScalingInstances
          - autoscaling:SetDesiredCapacity
          - autoscaling:DescribeAutoScalingGroups
          - autoscaling:DescribeTags
          - autoscaling:DescribeLaunchConfigurations
          - autoscaling:TerminateInstanceInAutoScalingGroup
          Resource: "*"
  AutoscalerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "autoscaler-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
        - Action: ["sts:AssumeRole"]
          Effect: Allow
          Principal:
            AWS: 
              Fn::GetAtt:
              - KiamServerRole
              - "Arn"
      Path: 
        Fn::Sub: "/cluster/${ClusterName}/"
      ManagedPolicyArns:
        - !Ref AutoscalerManagedPolicy
Outputs:
  ClusterName:
    Export:
      Name: !Sub '${AWS::StackName}::ClusterName'
    Value: !Sub "${ClusterName}"
  AutoscalerRoleARN:
    Export:
      Name: !Sub '${AWS::StackName}::AutoscalerRoleARN'
    Value: !GetAtt AutoscalerRole.Arn
  CertManagerRoleARN:
    Export:
      Name: !Sub '${AWS::StackName}::CertManagerRoleARN'
    Value: !GetAtt CertManagerRole.Arn
  ExternalDNSRoleARN:
    Export:
      Name: !Sub '${AWS::StackName}::ExternalDNSRoleARN'
    Value: !GetAtt ExternalDNSRole.Arn
  KiamServerRoleARN:
    Export:
      Name: !Sub '${AWS::StackName}::KiamServerRoleARN'
    Value: !GetAtt KiamServerRole.Arn

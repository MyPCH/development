### Helpers Start ###
def absolute_dir(relative_dir):
  return str(local('mkdir -p {dir} && cd {dir} && pwd'.format(dir=relative_dir))).strip()

def getNested(dict, path, fallback=None):
  value = dict
  for path_segment in path.split('.'):
    value = value.get(path_segment, {})
  return value or fallback
### Helpers End ###

### Global Start ###
tidepool_helm_overrides_file = './Tiltconfig.yaml'
config = read_yaml(tidepool_helm_overrides_file)
configOverrides = read_yaml('./local/Tiltconfig.yaml', False)

watch_file(tidepool_helm_overrides_file)

if type(configOverrides) == 'dict':
  config.update(configOverrides.items())
  tidepool_helm_overrides_file = './local/Tiltconfig.yaml'
  watch_file(tidepool_helm_overrides_file)

tidepool_helm_charts_version = config.get('tidepool_helm_charts_version')
tidepool_helm_chart_dir = "./charts/tidepool/{}".format(tidepool_helm_charts_version)
### Global End ###

### Main Start ###
def main():
  # Provision the gloo gateway service
  provisionGlooGateway()

  # Back out of actual provisioning for debugging purposes by uncommenting below
  # fail('NOT YET ;)')
### Main End ###

### Gloo Gateway Start ###
def provisionGlooGateway():
  proxy_helm_template_cmd = 'helm template --name tidepool-tilt-proxy --namespace default '

  for chart in listdir('{}/charts'.format(tidepool_helm_chart_dir)):
    if chart.find('gloo') >= 0:
      gloo_chart_dir = './local/charts'
      absolute_gloo_chart_dir = absolute_dir(gloo_chart_dir)
      local('mkdir -p {}'.format(absolute_gloo_chart_dir))
      local('tar -xzf {} -C {}'.format(chart, absolute_gloo_chart_dir));

      k8s_yaml(local('{templateCmd} -f {overridesFile} {chartDir}/gloo'.format(
        chartDir=absolute_gloo_chart_dir,
        templateCmd=proxy_helm_template_cmd,
        overridesFile=tidepool_helm_overrides_file,
      )))

      k8s_yaml(local('templates=({chartDir}/templates/gloo-internal.yaml {chartDir}/templates/internal-gateway-service.yaml {chartDir}/templates/gloo-external-http.yaml) && helm template -x $templates -f {overridesFile} {chartDir}'.format(
        chartDir=absolute_dir(tidepool_helm_chart_dir),
        overridesFile=tidepool_helm_overrides_file,
      )))

  # Expose the gateway proxy on a host port
  gateway_port_forwards = getNested(config,'gateway-proxy.portForwards', ['3000'])
  k8s_resource('gateway-proxy', port_forwards=gateway_port_forwards)
### Gloo Gateway End ###

# Unleash the beast
main()

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: shoreline
    helm.sh/chart: {{ include "charts.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: shoreline
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server-secret,mongo,mailchimp"
spec:
  selector:
    matchLabels:
      app: shoreline
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: shoreline
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        linkerd.io/inject: enabled
    spec:
      {{ include "charts.init.mongo" .}}
      containers:
      - env:
        {{ include "charts.mongo.params" .}}
        - name: MONGO_DATABASE
          value: user
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: API_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: shoreline
        - name: MAILCHIMP_APIKEY
          valueFrom:
            secretKeyRef:
              name: mailchimp
              key: apikey
        - name: TIDEPOOL_SHORELINE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:{{.Values.global.ports.gatekeeper}}"]}},
                "hakken": {
                  "host": "hakken",
                  "skipHakken": true
                },
                "highwater": {
                    "metricsSource": "shoreline",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://highwater:{{.Values.global.ports.highwater}}"]}
                }
            }
        - name: TIDEPOOL_SHORELINE_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": ""
                },
                "oauth2": {
                    "expireDays": 14
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:{{.Values.global.ports.shoreline}}",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "shoreline"
                },
                "user": {
                    "clinicDemoUserId": "{{.Values.shoreline.clinicDemoUserId}}",
                    "longTermDaysDuration": 30,
                    "longTermKey": "{{.Values.shoreline.longtermkey}}",
                    "salt": "{{.Values.shoreline.salt}}",
                    "tokenDurationSecs": 2592000,
                    "verificationSecret": "{{.Values.shoreline.verification.secret}}",
                    "mailchimp": {
                      "url": "{{.Values.shoreline.mailchimp.url}}",
                      "apiKey": "",
                      "personalLists": {{.Values.shoreline.mailchimp.personalLists | nindent 24 -}},
                      "clinicLists": {{.Values.shoreline.mailchimp.clinicLists | nindent 24}}
                     }
                }
            }
        image: "{{ .Values.shoreline.image }}"
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 10101
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /status
            port: {{.Values.global.ports.shoreline}}
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shoreline
        ports:
        - containerPort: {{.Values.global.ports.shoreline}}
        resources:
          {{- toYaml .Values.global.resources | nindent 10 }}
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/auth-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-auth-user-restricted-tokens
      prefix: "/v1/users/[^/]+/restricted_tokens"
      prefix_regex: true
      method: "GET|POST|DELETE"
      method_regex: true
      rewrite: ""
      service: auth.default:9222
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-auth-user-provider-sessions
      prefix: "/v1/users/[^/]+/provider_sessions"
      prefix_regex: true
      method: "GET|POST|DELETE"
      method_regex: true
      rewrite: ""
      service: auth.default:9222
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-auth-restricted-tokens
      prefix: "/v1/restricted_tokens"
      method: "GET|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: auth.default:9222
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-auth-provider-sessions
      prefix: "/v1/provider_sessions/[^/]+"
      prefix_regex: true
      method: "GET|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: auth.default:9222
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-auth-authorize
      prefix: "/v1/oauth/[^/]+/authorize"
      prefix_regex: true
      method: "GET|DELETE"
      method_regex: true
      rewrite: ""
      service: auth.default:9222
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-auth-redirect
      prefix: "/v1/oauth/[^/]+/redirect"
      prefix_regex: true
      method: "GET"
      rewrite: ""
      service: auth.default:9222
  labels:
    app: auth
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: auth
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9222
    targetPort: 9222
  selector:
    app: auth
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/blip-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /terms
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /signup
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /clinician-details
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000      
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /email-verification
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /profile
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /patients
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /request-password-reset
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /confirm-password-reset
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /request-password-from-uploader
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000      
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /verification-with-password
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000 
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /browser-warning
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: /event/csp-report/violation
      rewrite: ""
      method: "POST"
      method_regex: false
      service: blip.default:3000
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blip
      prefix: "/"
      rewrite: ""
      method: "GET"
      method_regex: false
      service: blip.default:3000
  labels:
    app: blip
    app.kubernetes.io/name: tidepool
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
  name: blip
  namespace: default
spec:
  ports:
  - name: "http"
    port: 3000
    targetPort: 3000
  selector:
    app: blip
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/blob-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blob-user-blobs
      prefix: "/v1/users/[^/]+/blobs"
      prefix_regex: true
      method: "GET|POST|DELETE"
      method_regex: true
      rewrite: ""
      service: blob.default:9225
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blob-blobs
      prefix: "/v1/blobs/[^/]+"
      prefix_regex: true
      method: "GET|DELETE"
      method_regex: true
      rewrite: ""
      service: blob.default:9225
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-blob-blobs-content
      prefix: "/v1/blobs/[^/]+/content"
      prefix_regex: true
      method: "GET"
      rewrite: ""
      service: blob.default:9225
  labels:
    app: blob
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: blob
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9225
    targetPort: 9225
  selector:
    app: blob
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/data-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-dataservices
      prefix: /dataservices/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-data
      prefix: "/v1/data/"
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-user_data_sources
      prefix: "/v1/users/[^/]+/data_sources"
      prefix_regex: true
      method: "GET|POST|DELETE|OPTIONS"
      method_regex: true
      rewrite: ""
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-user_data_sets
      prefix: "/v1/users/[^/]+/data_sets"
      prefix_regex: true
      method: "GET"
      rewrite: ""
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-user_datasets
      prefix: "/v1/users/[^/]+/datasets"
      prefix_regex: true
      method: "GET|POST"
      method_regex: true
      rewrite: ""
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-user_data
      prefix: "/v1/users/[^/]+/data"
      prefix_regex: true
      method: "DELETE"
      rewrite: ""
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-time
      prefix: "/v1/time"
      method: "GET"
      rewrite: ""
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-data_sources
      prefix: "/v1/data_sources/[^/]+"
      prefix_regex: true
      method: "GET|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-data_sets
      prefix: "/v1/data_sets"
      method: "GET"
      rewrite: ""
      service: data.default:9220
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-data-datasets
      prefix: "/v1/datasets"
      method: "POST|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: data.default:9220
  labels:
    app: data
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: data
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9220
    targetPort: 9220
  selector:
    app: data
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/export-service.yaml

apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-export
      prefix: /export/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: export.default:9300
  labels:
    app: export
    app.kubernetes.io/name: tidepool
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
  name: export
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9300
    targetPort: 9300
  selector:
    app: export
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name


---
# Source: tidepool/templates/gatekeeper-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-gatekeeper-access
      prefix: /access/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: ""
      service: gatekeeper.default:9123
  labels:
    app: gatekeeper
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: gatekeeper
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9123
    targetPort: 9123
  selector:
    app: gatekeeper
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name

---
# Source: tidepool/templates/highwater-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-highwater-metrics
      prefix: /metrics/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: "/"
      path_redirect: "false"
      service: highwater.default:9191
  labels:
    app: highwater
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: highwater
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9191
    targetPort: 9191
  selector:
    app: highwater
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/hydrophone-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-hydrophone-confirm
      prefix: /confirm/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: "/"
      path_redirect: "false"
      service: hydrophone.default:9157
  labels:
    app: hydrophone
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: hydrophone
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9157
    targetPort: 9157
  selector:
    app: hydrophone
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/image-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-image
      prefix: "/v1/images"
      prefix_regex: false
      method: "GET|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: image.default:9226
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-image-users-images
      prefix: "/v1/users/[^/]+/images"
      prefix_regex: true
      method: "GET|POST|DELETE"
      method_regex: true
      rewrite: ""
      service: image.default:9226
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-image-users-images-regex
      prefix: "/v1/users/[^/]+/images/.+"
      prefix_regex: true
      method: "GET|POST|DELETE"
      method_regex: true
      rewrite: ""
      service: image.default:9226
  labels:
    app: image
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: image
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9226
    targetPort: 9226
  selector:
    app: image
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/internal-names.yaml
apiVersion: v1
kind: Service
metadata:
  name: 'internal'
  namespace: 'default'
spec:
  externalName: gateway-proxy.gloo-system.svc.cluster.local
  ports:
  - port: 80
  type: ExternalName

---
# Source: tidepool/templates/jellyfish-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-jellyfish
      prefix: /v1/device/upload/cl
      method: "POST"
      method_regex: false
      rewrite: ""
      path_redirect: "false"
      service: jellyfish.default:9122
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-jellyfish
      prefix: /v1/synctasks/
      method: "GET"
      method_regex: false
      rewrite: ""
      path_redirect: "false"
      service: jellyfish.default:9122
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-jellyfish
      prefix: /v1/device/data/"
      method: "GET"
      method_regex: false
      rewrite: ""
      path_redirect: "false"
      service: jellyfish.default:9122
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-jellyfish
      prefix: /data/
      method: "POST"
      method_regex: false
      rewrite: ""
      path_redirect: "false"
      service: jellyfish.default:9122
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-jellyfish
      prefix: /info
      method: "GET"
      method_regex: false
      rewrite: ""
      path_redirect: "false"
      service: jellyfish.default:9122

  labels:
    app: jellyfish
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: jellyfish
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9122
    targetPort: 9122
  selector:
    app: jellyfish
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/message-api-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-message-api-message
      prefix: /message/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: message-api.default:9119
  labels:
    app: message-api
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: message-api
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9119
    targetPort: 9119
  selector:
    app: message-api
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/notification-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: notification
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: notification
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9223
    targetPort: 9223
  selector:
    app: notification
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/seagull-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-seagull
      prefix: /metadata/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: "/"
      path_redirect: "false"
      service: seagull.default:9120
  labels:
    app: seagull
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: seagull
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9120
    targetPort: 9120
  selector:
    app: seagull
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/shoreline-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-shoreline-auth
      prefix: /auth/
      path_redirect: "false"
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: "/"
      service: shoreline.default:9107
  labels:
    app: shoreline
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: shoreline
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9107
    targetPort: 9107
  selector:
    app: shoreline
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/task-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-task-tasks
      prefix: "/v1/tasks"
      method: "GET|POST"
      method_regex: true
      rewrite: ""
      service: task.default:9224
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-task-tasks-id
      prefix: "/v1/tasks/[^/*]"
      prefix_regex: true
      method: "GET|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: task.default:9224
  labels:
    app: task
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: task
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9224
    targetPort: 9224
  selector:
    app: task
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/tide-whisperer-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-tide-whisperer-data
      prefix: /data/
      method: "GET"
      method_regex: false
      path_redirect: "false"
      rewrite: "/"
      service: tide-whisperer.default:9127
  labels:
    app: tide-whisperer
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: tide-whisperer
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9127
    targetPort: 9127
  selector:
    app: tide-whisperer
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/user-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    tidepool.org/config: |
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-user-userservices
      prefix: /userservices/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: user.default:9221
      ---
      apiVersion: tidepool/v1alpha
      kind:  Mapping
      host: tp
      name: default-user-users
      prefix: "/v1/users/[^/*]"
      prefix_regex: true
      method: "GET|DELETE"
      method_regex: true
      rewrite: ""
      service: user.default:9221
  labels:
    app: user
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: user
  namespace: default
spec:
  ports:
  - name: "http"
    port: 9221
    targetPort: 9221
  selector:
    app: user
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
status:
  loadBalancer: {}

---
# Source: tidepool/templates/auth-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: auth
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: auth
  namespace: default
spec:
  selector:
    matchLabels:
      app: auth
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: auth
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-shoreline
        image: busybox
        command: ['sh', '-c', 'until nc -zvv shoreline 9107; do echo waiting for shoreline; sleep 2; done;']
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: internal.default
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: blob
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: data
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: notification
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_ID
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_SECRET
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: https://dev.tidepool.org/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: STATE_SALT
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'db.dev.private.tidepool.org:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_USERNAME
          value: ''
        - name: TIDEPOOL_STORE_PASSWORD
          value: ''
        - name: TIDEPOOL_STORE_TLS
          value: 'true'
        - name: TIDEPOOL_STORE_OPT_PARAMS
          value: ''
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: task
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: user
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'fuheqwiuhfkjkljdsoifkqm'
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: image 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :9226
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/image'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'images'
        image: "tidepool/platform-auth:go11110-89257ec20c2aa8899b76d7b8264619ce55d3f8bb"
        livenessProbe:
          httpGet:
            path: /status
            port: 9222
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /status
            port: 9222
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: auth
        ports:
        - containerPort: 9222
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/blip-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: blip
    app.kubernetes.io/name: tidepool
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
  name: blip
  namespace: default
spec:
  selector:
    matchLabels:
      app: blip
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: blip
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - image: "tidepool/blip:v1.22.0"
        env:
        - name: SKIP_HAKKEN
          value: "true"
        imagePullPolicy: IfNotPresent
        name: blip
        ports:
        - containerPort: 3000
        resources:
          {}
          
      restartPolicy: Always

status: {}

---
# Source: tidepool/templates/blob-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: blob
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: blob
  namespace: default
spec:
  selector:
    matchLabels:
      app: blob
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: blob
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-shoreline
        image: busybox
        command: ['sh', '-c', 'until nc -zvv shoreline 9107; do echo waiting for shoreline; sleep 2; done;']
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: internal.default
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: blob
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: data
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: notification
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_ID
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_SECRET
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: https://dev.tidepool.org/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: STATE_SALT
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'db.dev.private.tidepool.org:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_USERNAME
          value: ''
        - name: TIDEPOOL_STORE_PASSWORD
          value: ''
        - name: TIDEPOOL_STORE_TLS
          value: 'true'
        - name: TIDEPOOL_STORE_OPT_PARAMS
          value: ''
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: task
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: user
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'fuheqwiuhfkjkljdsoifkqm'
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: image 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :9226
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/image'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'images'
        image: "tidepool/platform-blob:go11110-89257ec20c2aa8899b76d7b8264619ce55d3f8bb"
        livenessProbe:
          httpGet:
            path: /status
            port: 9225
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /status
            port: 9225
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: blob
        ports:
        - containerPort: 9225
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/data-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: data
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: data
  namespace: default
spec:
  selector:
    matchLabels:
      app: data
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: data
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-shoreline
        image: busybox
        command: ['sh', '-c', 'until nc -zvv shoreline 9107; do echo waiting for shoreline; sleep 2; done;']
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: internal.default
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: blob
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: data
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: notification
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_ID
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_SECRET
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: https://dev.tidepool.org/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: STATE_SALT
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'db.dev.private.tidepool.org:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_USERNAME
          value: ''
        - name: TIDEPOOL_STORE_PASSWORD
          value: ''
        - name: TIDEPOOL_STORE_TLS
          value: 'true'
        - name: TIDEPOOL_STORE_OPT_PARAMS
          value: ''
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: task
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: user
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'fuheqwiuhfkjkljdsoifkqm'
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: image 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :9226
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/image'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'images'
        image: "tidepool/platform-data:go11110-89257ec20c2aa8899b76d7b8264619ce55d3f8bb"
        livenessProbe:
          httpGet:
            path: /status
            port: 9220
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /status
            port: 9220
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: data
        ports:
        - containerPort: 9220
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/export-deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: export
    app.kubernetes.io/name: tidepool
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
  name: export
  namespace: default
spec:
  selector:
    matchLabels:
      app: export
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: export
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - env:
        - name: API_HOST
          value: http://internal
        - name: DEBUG_LEVEL
          value: debug
        - name: HTTP_PORT
          value: "9300"
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: export
        image: "tidepool/export:v1.3.2"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /export/status
            port: 9300
          initialDelaySeconds: 30
          periodSeconds: 10
        name: export
        ports:
        - containerPort: 9300
        resources:
          {}
          
      restartPolicy: Always


---
# Source: tidepool/templates/gatekeeper-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: gatekeeper
    app.kubernetes.io/name: tidepool
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Tiller
  name: gatekeeper
  namespace: default
spec:
  selector:
    matchLabels:
      app: gatekeeper
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: gatekeeper
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv db.dev.private.tidepool.org 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: DISCOVERY_HOST
          value: 'hakken'
        - name: GATEKEEPER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: MONGO_CONNECTION_STRING
          value: mongodb://db.dev.private.tidepool.org:27017/gatekeeper?ssl=true
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9123"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SKIP_HAKKEN
          value: "true"
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVICE_NAME
          value: gatekeeper
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        image: "tidepool/gatekeeper:v0.7.2"
        imagePullPolicy: IfNotPresent
        livenessProbe:
           httpGet:
             path: /status
             port: 9123
           initialDelaySeconds: 3
           periodSeconds: 10
        name: gatekeeper
        ports:
        - containerPort: 9123
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/highwater-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: highwater
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: highwater
  namespace: default
spec:
  selector:
    matchLabels:
      app: highwater
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: highwater
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      containers:
      - env:
        - name: SKIP_HAKKEN
          value: "true"
        - name: DISCOVERY_HOST
          value: 'hakken'
        - name: METRICS_APIKEY
          valueFrom:
            secretKeyRef:
              name: highwater
              key: APIKEY
        - name: METRICS_TOKEN
          valueFrom:
            secretKeyRef:
              name: highwater
              key: TOKEN
        - name: METRICS_UCSF_APIKEY
          valueFrom:
            secretKeyRef:
              name: highwater
              key: UCSF_APIKEY
        - name: METRICS_UCSF_WHITELIST
          valueFrom:
            secretKeyRef:
              name: highwater
              key: UCSF_WHITELIST
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9191"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SALT_DEPLOY
          value: 'DVkFvvX1dr1PBw4YmMkI'
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVICE_NAME
          value: highwater
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        image: "tidepool/highwater:v0.3.5"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: 9191
          initialDelaySeconds: 3
          periodSeconds: 10
        name: highwater
        ports:
        - containerPort: 9191
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/hydrophone-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: hydrophone
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: hydrophone
  namespace: default
spec:
  selector:
    matchLabels:
      app: hydrophone
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: hydrophone
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv db.dev.private.tidepool.org 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: REGION
          value: us-west-2            
        - name: TIDEPOOL_HYDROPHONE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:9123"]}},
                "hakken": {
                  "host": "hakken",
                  "skipHakken": true
                },
                "highwater": {
                    "metricsSource": "hydrophone",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://highwater:9191"]}
                },
                "seagull": {"serviceSpec": {"type": "static", "hosts": ["http://seagull:9120"]}},
                "shoreline": {
                    "name": "hydrophone",
                    "serviceSpec": {"type": "static", "hosts": ["http://shoreline:9107"]},
                    "tokenRefreshInterval": "1h"
                }
            }
        - name: PROTOCOL
          value: "https"
        - name: TIDEPOOL_HYDROPHONE_SERVICE
          value: |
            {
                "hydrophone": {
                    "assetUrl": "https://s3-us-west-2.amazonaws.com/tidepool-default-asset"
                },
                "mongo": {
                    "connectionString": "mongodb://db.dev.private.tidepool.org:27017/confirm?ssl=true"
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:9157",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "hydrophone"
                },
                "sesEmail": {
                    "fromAddress": "Tidepool <noreply@tidepool.org>"
                }
            }
        image: "tidepool/hydrophone:v99.99.100"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: 9157
          initialDelaySeconds: 30
          periodSeconds: 10
        name: hydrophone
        ports:
        - containerPort: 9157
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/image-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: image
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: image
  namespace: default
spec:
  selector:
    matchLabels:
      app: image
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: image
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-shoreline
        image: busybox
        command: ['sh', '-c', 'until nc -zvv shoreline 9107; do echo waiting for shoreline; sleep 2; done;']
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: internal.default
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: blob
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: data
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: notification
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_ID
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_SECRET
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: https://dev.tidepool.org/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: STATE_SALT
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'db.dev.private.tidepool.org:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_USERNAME
          value: ''
        - name: TIDEPOOL_STORE_PASSWORD
          value: ''
        - name: TIDEPOOL_STORE_TLS
          value: 'true'
        - name: TIDEPOOL_STORE_OPT_PARAMS
          value: ''
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: task
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: user
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'fuheqwiuhfkjkljdsoifkqm'
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: image 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :9226
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/image'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'images'
        image: "tidepool/platform-image:go11110-89257ec20c2aa8899b76d7b8264619ce55d3f8bb"
        livenessProbe:
          httpGet:
            path: /status
            port: 9226
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /status
            port: 9226
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: image
        ports:
        - containerPort: 9226
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/jellyfish-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: jellyfish
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: jellyfish
  namespace: default
spec:
  selector:
    matchLabels:
      app: jellyfish
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: jellyfish
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv db.dev.private.tidepool.org 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: SKIP_HAKKEN
          value: "true"
        - name: DISCOVERY_HOST
          value: 'hakken'
        - name: GATEKEEPER_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "gatekeeper:9123"}]}'
        - name: MINIMUM_UPLOADER_VERSION
          value: 0.251.0
        - name: MONGO_CONNECTION_STRING
          value: mongodb://db.dev.private.tidepool.org:27017/data?ssl=true
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9122"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SALT_DEPLOY
          value: 'itNkczadZ1EeC9fUWR3LnbKFagtYYLOk'
        - name: SCHEMA_VERSION
          value: "3"
        - name: SEAGULL_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "seagull:9120"}]}'
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVE_STATIC
          value: dist
        - name: SERVICE_NAME
          value: jellyfish
        - name: STORAGE_TYPES
          value: '{"aws/s3": {"type": "aws/s3", "encryption": "none", "region": "us-west-2", "bucket": "tidepool-default-data" }}'
        - name: STORAGE_DEFAULT
          value: aws/s3
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        image: "tidepool/jellyfish:v0.12.3"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: 9122
          initialDelaySeconds: 3
          periodSeconds: 10
        name: jellyfish
        ports:
        - containerPort: 9122
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/message-api-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: message-api
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: message-api
  namespace: default
spec:
  selector:
    matchLabels:
      app: message-api
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: message-api
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv db.dev.private.tidepool.org 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: DISCOVERY_HOST
          value: 'hakken'
        - name: GATEKEEPER_SERVICE
          value: '{
                  "type": "static", "hosts": [{"protocol": "http", "host": "gatekeeper:9123"}]}'
        - name: METRICS_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "highwater:9191"}]}'
        - name: MONGO_CONNECTION_STRING
          value: mongodb://db.dev.private.tidepool.org:27017/messages?ssl=true
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9119"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SEAGULL_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "seagull:9120"}]}'
        - name: SERVER_NAME
          value: message-api
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVICE_NAME
          value: message-api
        - name: DELETE_TIME_WINDOW
          value: '21'
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        - name: SKIP_HAKKEN
          value: "true"
        image: "tidepool/message-api:develop-3c23130779e5286a404c439bed49c18186a7711a" 
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: 9119
          initialDelaySeconds: 3
          periodSeconds: 10
        name: message-api
        ports:
        - containerPort: 9119
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/migrations-deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: migrations
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: migrations
  namespace: default
spec:
  selector:
    matchLabels:
      app: migrations
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: migrations
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-shoreline
        image: busybox
        command: ['sh', '-c', 'until nc -zvv shoreline 9107; do echo waiting for shoreline; sleep 2; done;']
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: internal.default
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: blob
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: data
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: notification
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_ID
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_SECRET
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: https://dev.tidepool.org/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: STATE_SALT
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'db.dev.private.tidepool.org:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_USERNAME
          value: ''
        - name: TIDEPOOL_STORE_PASSWORD
          value: ''
        - name: TIDEPOOL_STORE_TLS
          value: 'true'
        - name: TIDEPOOL_STORE_OPT_PARAMS
          value: ''
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: task
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: user
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'fuheqwiuhfkjkljdsoifkqm'
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: image 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :9226
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/image'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'images'
        image: "tidepool/platform-migrations:go11110-89257ec20c2aa8899b76d7b8264619ce55d3f8bb"
        name: migrations
        resources:
          {}
          
      restartPolicy: Always


---
# Source: tidepool/templates/notification-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: notification
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: notification
  namespace: default
spec:
  selector:
    matchLabels:
      app: notification
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: notification
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-shoreline
        image: busybox
        command: ['sh', '-c', 'until nc -zvv shoreline 9107; do echo waiting for shoreline; sleep 2; done;']
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: internal.default
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: blob
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: data
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: notification
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_ID
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_SECRET
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: https://dev.tidepool.org/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: STATE_SALT
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'db.dev.private.tidepool.org:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_USERNAME
          value: ''
        - name: TIDEPOOL_STORE_PASSWORD
          value: ''
        - name: TIDEPOOL_STORE_TLS
          value: 'true'
        - name: TIDEPOOL_STORE_OPT_PARAMS
          value: ''
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: task
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: user
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'fuheqwiuhfkjkljdsoifkqm'
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: image 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :9226
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/image'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'images'
        image: "tidepool/platform-notification:go11110-89257ec20c2aa8899b76d7b8264619ce55d3f8bb"
        livenessProbe:
          httpGet:
            path: /status
            port: 9223
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /status
            port: 9223
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: notification
        ports:
        - containerPort: 9223
        resources:
          {}
          
      restartPolicy: Always

---
# Source: tidepool/templates/seagull-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: seagull
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: seagull
  namespace: default
spec:
  selector:
    matchLabels:
      app: seagull
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: seagull
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv db.dev.private.tidepool.org 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: DISCOVERY_HOST
          value: 'hakken'
        - name: GATEKEEPER_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "gatekeeper:9123"}]}'
        - name: METRICS_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "highwater:9191"}]}'
        - name: MONGO_CONNECTION_STRING
          value: mongodb://db.dev.private.tidepool.org:27017/seagull?ssl=true
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9120"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SALT_DEPLOY
          value: 'Seagulls are the salt of the earth, without them, the coastline would not smell of dead fish'
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVICE_NAME
          value: seagull
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        - name: SKIP_HAKKEN
          value: "true"
        image: "tidepool/seagull:v0.7.2"
        livenessProbe:
          httpGet:
            path: /status
            port: 9120
          initialDelaySeconds: 30
          periodSeconds: 10
        name: seagull
        ports:
        - containerPort: 9120
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/shoreline-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: shoreline
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: shoreline
  namespace: default
spec:
  selector:
    matchLabels:
      app: shoreline
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: shoreline
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv db.dev.private.tidepool.org 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: API_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: shoreline
        - name: MAILCHIMP_APIKEY
          valueFrom:
            secretKeyRef:
              name: mailchimp
              key: apikey
        - name: TIDEPOOL_SHORELINE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:9123"]}},
                "hakken": {
                  "host": "hakken",
                  "skipHakken": true
                },
                "highwater": {
                    "metricsSource": "shoreline",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://highwater:9191"]}
                }
            }
        - name: TIDEPOOL_SHORELINE_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": "mongodb://db.dev.private.tidepool.org:27017/user?ssl=true"
                },
                "oauth2": {
                    "expireDays": 14
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:9107",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "shoreline"
                },
                "user": {
                    "clinicDemoUserId": "e79b15328a",
                    "longTermDaysDuration": 30,
                    "longTermKey": "bnthqfizruxgjsmckpwevaoydl",
                    "salt": "fuheqwiuhfkjkljdsoifkqm",
                    "tokenDurationSecs": 2592000,
                    "verificationSecret": "+skip",
                    "mailchimp": {
                      "url": "https://us7.api.mailchimp.com/3.0",
                      "apiKey": "",
                      "personalLists": 
                        [
                          {
                            "id": "d79b5a3924",
                            "interests": {
                              "35d99df867": true
                            }
                          },
                          {
                            "id": "461feca051"
                          }
                        ]
                        ,
                      "clinicLists": 
                        [
                          {
                            "id": "d79b5a3924",
                            "interests": {
                              "35d99df867": true,
                              "03cab91941": true
                            }
                          },
                          {
                            "id": "627a2577da"
                          }
                        ]
                        
                     }
                }
            }
        image: "tidepool/shoreline:v0.14.2"
        livenessProbe:
          httpGet:
            path: /status
            port: 9107
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shoreline
        ports:
        - containerPort: 9107
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/task-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: task
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: task
  namespace: default
spec:
  selector:
    matchLabels:
      app: task
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: task
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-shoreline
        image: busybox
        command: ['sh', '-c', 'until nc -zvv shoreline 9107; do echo waiting for shoreline; sleep 2; done;']
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: internal.default
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: blob
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: data
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: notification
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_ID
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_SECRET
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: https://dev.tidepool.org/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: STATE_SALT
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'db.dev.private.tidepool.org:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_USERNAME
          value: ''
        - name: TIDEPOOL_STORE_PASSWORD
          value: ''
        - name: TIDEPOOL_STORE_TLS
          value: 'true'
        - name: TIDEPOOL_STORE_OPT_PARAMS
          value: ''
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: task
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: user
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'fuheqwiuhfkjkljdsoifkqm'
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: image 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :9226
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/image'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'images'
        image: "tidepool/platform-task:go11110-89257ec20c2aa8899b76d7b8264619ce55d3f8bb"
        livenessProbe:
          httpGet:
            path: /status
            port: 9224
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /status
            port: 9224
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: task
        ports:
        - containerPort: 9224
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/tide-whisperer-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: tide-whisperer
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: tide-whisperer
  namespace: default
spec:
  selector:
    matchLabels:
      app: tide-whisperer
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: tide-whisperer
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv db.dev.private.tidepool.org 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_TIDE_WHISPERER_ENV
          value: |
            {
                "auth": {
                  "address": "http://auth:9222",
                  "userAgent": "Tidepool-TideWhisperer"
                },
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:9123"]}},
                "hakken": {
                  "host": "hakken",
                  "skipHakken": true
                  },
                "seagull": {"serviceSpec": {"type": "static", "hosts": ["http://seagull:9120"]}},
                "shoreline": {
                    "name": "tide-whisperer",
                    "serviceSpec": {"type": "static", "hosts": ["http://shoreline:9107"]},
                    "tokenRefreshInterval": "1h"
                }
            }
        - name: TIDEPOOL_TIDE_WHISPERER_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": "mongodb://db.dev.private.tidepool.org:27017/data?ssl=true"
                },
                "schemaVersion": {
                    "maximum": 99,
                    "minimum": 1
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:9127",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "tide-whisperer"
                }
            }
        image: "tidepool/tide-whisperer:v0.13.0"
        livenessProbe:
          httpGet:
            path: /status
            port: 9127
          initialDelaySeconds: 30
          periodSeconds: 10
        name: tide-whisperer
        ports:
        - containerPort: 9127
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/user-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: user
    helm.sh/chart: tidepool-0.1.5
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/name: tidepool
    app.kubernetes.io/instance: release-name
  name: user
  namespace: default
spec:
  selector:
    matchLabels:
      app: user
      app.kubernetes.io/name: tidepool
      app.kubernetes.io/instance: release-name
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: user
        app.kubernetes.io/name: tidepool
        app.kubernetes.io/instance: release-name
    spec:
      initContainers:
      - name: init-shoreline
        image: busybox
        command: ['sh', '-c', 'until nc -zvv shoreline 9107; do echo waiting for shoreline; sleep 2; done;']
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: internal.default
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: auth
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: blob
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: data
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: notification
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: gatekeeper
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_ID
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: CLIENT_SECRET
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: https://dev.tidepool.org/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          valueFrom:
            secretKeyRef:
              name: dexcom
              key: STATE_SALT
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'db.dev.private.tidepool.org:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_USERNAME
          value: ''
        - name: TIDEPOOL_STORE_PASSWORD
          value: ''
        - name: TIDEPOOL_STORE_TLS
          value: 'true'
        - name: TIDEPOOL_STORE_OPT_PARAMS
          value: ''
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: task
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://internal.default
        - name: TIDEPOOL_USER_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: user
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'fuheqwiuhfkjkljdsoifkqm'
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: image 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :9226
        - name: TIDEPOOL_IMAGE_CLIENT_ADDRESS
          value: http://image:9226
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 's3'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/image'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: 'tidepool-default-data'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: 'images'
        image: "tidepool/platform-user:go11110-89257ec20c2aa8899b76d7b8264619ce55d3f8bb"
        livenessProbe:
          httpGet:
            path: /status
            port: 9221
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /status
            port: 9221
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
        name: user
        ports:
        - containerPort: 9221
        resources:
          {}
          
      restartPolicy: Always
status: {}

---
# Source: tidepool/templates/00-namespace.yaml



---
# Source: tidepool/templates/nosqlclient-deployment.yaml


---
# Source: tidepool/templates/nosqlclient-service.yaml


---
# Source: tidepool/templates/server-secret.yaml.off


---
# Source: tidepool/templates/ses-secret.yaml.off


---
# Source: tidepool/templates/tools-deployment.yaml


---
# Source: tidepool/templates/gloo-internal.yaml
# Auto-generated file by gloo_gateway. Do not edit.

--- #file: gloo-auth-9222-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-auth-9222
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: auth
      serviceNamespace: $relname
      servicePort: 9222
--- #file: gloo-blip-3000-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-blip-3000
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: blip
      serviceNamespace: $relname
      servicePort: 3000
--- #file: gloo-blob-9225-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-blob-9225
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: blob
      serviceNamespace: $relname
      servicePort: 9225
--- #file: gloo-data-9220-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-data-9220
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: data
      serviceNamespace: $relname
      servicePort: 9220
--- #file: gloo-export-9300-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-export-9300
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: export
      serviceNamespace: $relname
      servicePort: 9300
--- #file: gloo-gatekeeper-9123-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-gatekeeper-9123
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: gatekeeper
      serviceNamespace: $relname
      servicePort: 9123
--- #file: gloo-highwater-9191-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-highwater-9191
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: highwater
      serviceNamespace: $relname
      servicePort: 9191
--- #file: gloo-hydrophone-9157-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-hydrophone-9157
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: hydrophone
      serviceNamespace: $relname
      servicePort: 9157
--- #file: gloo-image-9226-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-image-9226
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: image
      serviceNamespace: $relname
      servicePort: 9226
--- #file: gloo-internal-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: internal
  namespace: $relname
spec:
  displayName: internal
  virtualHost:
    domains:
    - internal.$relname
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: $relname-seagull-9120
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: $relname-highwater-9191
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: $relname-hydrophone-9157
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: $relname-message-api-9119
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: $relname-export-9300
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: $relname-gatekeeper-9123
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: $relname-shoreline-9107
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-tide-whisperer-9127
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
--- #file: gloo-jellyfish-9122-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-jellyfish-9122
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: jellyfish
      serviceNamespace: $relname
      servicePort: 9122
--- #file: gloo-message-api-9119-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-message-api-9119
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: message-api
      serviceNamespace: $relname
      servicePort: 9119
--- #file: gloo-seagull-9120-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-seagull-9120
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: seagull
      serviceNamespace: $relname
      servicePort: 9120
--- #file: gloo-shoreline-9107-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-shoreline-9107
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: shoreline
      serviceNamespace: $relname
      servicePort: 9107
--- #file: gloo-task-9224-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-task-9224
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: task
      serviceNamespace: $relname
      servicePort: 9224
--- #file: gloo-tide-whisperer-9127-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-tide-whisperer-9127
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: tide-whisperer
      serviceNamespace: $relname
      servicePort: 9127
--- #file: gloo-user-9221-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: $relname-user-9221
  namespace: $relname
spec:
  upstreamSpec:
    kube:
      serviceName: user
      serviceNamespace: $relname
      servicePort: 9221


---
# Source: tidepool/templates/gloo-external-http.yaml
# Auto-generated file by gloo_gateway. Do not edit.
--- #file: gloo-$key-external-http-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: $key-$relname-external-http
  namespace: $relname
spec:
  displayName: $key-$relname-external-http
  virtualHost:
    domains:
    - $spec.name
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: $relname-seagull-9120
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: $relname-highwater-9191
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: $relname-hydrophone-9157
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: $relname-message-api-9119
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: $relname-export-9300
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: $relname-gatekeeper-9123
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: $relname-shoreline-9107
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-tide-whisperer-9127
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname


---
# Source: tidepool/templates/gloo-external-https.yaml
# Auto-generated file by gloo_gateway. Do not edit.
--- #file: gloo-$key-external-https-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: $key-$relname-external-https
  namespace: $relname
spec:
  displayName: $key-$relname-external-https
  sslConfig:
    secretRef:
      name: $spec.tlssecret.name
      namespace: $spec.tlssecret.namespace
    sniDomains:
    - $key.name
  virtualHost:
    corsPolicy:
      allowCredentials: true
      allowHeaders:
      - authorization
      - content-type
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      allowMethods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
      allowOriginRegex:
      - .*
      exposeHeaders:
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      maxAge: 600s
    domains:
    - $spec.name
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: $relname-seagull-9120
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: $relname-highwater-9191
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: $relname-hydrophone-9157
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: $relname-message-api-9119
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: $relname-export-9300
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: $relname-gatekeeper-9123
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: $relname-shoreline-9107
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-tide-whisperer-9127
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname

--- #file: gloo-$key-external-https-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: $key-$relname-external-https
  namespace: $relname
spec:
  displayName: $key-$relname-external-https
  sslConfig:
    secretRef:
      name: $spec.tlssecret.name
      namespace: $spec.tlssecret.namespace
    sniDomains:
    - $key.name
  virtualHost:
    corsPolicy:
      allowCredentials: true
      allowHeaders:
      - authorization
      - content-type
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      allowMethods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
      allowOriginRegex:
      - .*
      exposeHeaders:
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      maxAge: 600s
    domains:
    - $spec.name
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: $relname-seagull-9120
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: $relname-highwater-9191
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: $relname-hydrophone-9157
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: $relname-message-api-9119
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: $relname-export-9300
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: $relname-gatekeeper-9123
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: $relname-shoreline-9107
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-tide-whisperer-9127
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname

--- #file: gloo-$key-external-https-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: $key-$relname-external-https
  namespace: $relname
spec:
  displayName: $key-$relname-external-https
  sslConfig:
    secretRef:
      name: $spec.tlssecret.name
      namespace: $spec.tlssecret.namespace
    sniDomains:
    - $key.name
  virtualHost:
    corsPolicy:
      allowCredentials: true
      allowHeaders:
      - authorization
      - content-type
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      allowMethods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
      allowOriginRegex:
      - .*
      exposeHeaders:
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      maxAge: 600s
    domains:
    - $spec.name
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: $relname-seagull-9120
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: $relname-highwater-9191
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: $relname-hydrophone-9157
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: $relname-message-api-9119
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: $relname-export-9300
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: $relname-gatekeeper-9123
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: $relname-shoreline-9107
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-tide-whisperer-9127
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname

--- #file: gloo-$key-external-https-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: $key-$relname-external-https
  namespace: $relname
spec:
  displayName: $key-$relname-external-https
  sslConfig:
    secretRef:
      name: $spec.tlssecret.name
      namespace: $spec.tlssecret.namespace
    sniDomains:
    - $key.name
  virtualHost:
    corsPolicy:
      allowCredentials: true
      allowHeaders:
      - authorization
      - content-type
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      allowMethods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
      allowOriginRegex:
      - .*
      exposeHeaders:
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      maxAge: 600s
    domains:
    - $spec.name
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: $relname-auth-9222
            namespace: $relname
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: $relname-blob-9225
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: $relname-user-9221
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: $relname-image-9226
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: $relname-seagull-9120
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: $relname-highwater-9191
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: $relname-hydrophone-9157
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: $relname-message-api-9119
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: $relname-task-9224
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: $relname-data-9220
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: $relname-export-9300
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: $relname-gatekeeper-9123
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: $relname-shoreline-9107
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: $relname-tide-whisperer-9127
            namespace: $relname
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: $relname-jellyfish-9122
            namespace: $relname
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: $relname-blip-3000
            namespace: $relname



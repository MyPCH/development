gloo:
  enabled: true
  namespace:
    create: false
  gatewayProxies:
    gateway-proxy:
      service:
        httpPort: 8080                                               # HTTP port to listen on
        #httpsPort: 8443                                             # HTTPS port to listen on
        type: ClusterIP                                              # Type of service to create (alternative: ClusterIP)
        #extraAnnotations:                                           # Use to create an AWS Network Load Balancer 
          #service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
mongodb:
  enabled: true
  image:
    tag: "3.6"
  persistence:
    enabled: false
  fullnameOverride: "mongodb"
  usePassword: false
global:
  hpa:
    enabled: true
  hosts:
    default:
      protocol: http                                                  # the protocol to use for signup emails
      host: localhost                                                 # a valid DNS name[:port] for the service
    http:                                                             # a map of hosts that provide HTTP access to the service
      localhost:                                                      # a simple identifier for a host providing HTTP access
      name: 'localhost:8080'                                          # a DNS name[:port] for a host providing HTTP access.
    #https:                                                           # a map of hosts that provide HTTPS access to the service
      #dev:                                                           # a map of hosts that provide HTTPS access to the service
        #name: dev.tidepool.org                                       # a simple identifier for a host providing HTTPS access
        #tlssecret:                                                   # a TLS secret containing the Cert for the host
          #name: tidepool-org                                         # the name of the TLS secret
          #namespace: default                                         # the namespace of the TLS secret
  gateway:                                                            # only needed if need to expose the incoming IP address
    #httpPort: 80                                                     # to create an external HTTP gateway on port 80
    #httpsPort: 443                                                   # to create an external HTTPS gateway on port 443
    proxy:                                                            # proxy if embedded gloo gateway is disabled.
      name: gateway-proxy                                             # the name of the API gateway service (unused if gloo.enabled)
      namespace: gloo-system                                          # the namespace of the API gateway proxy service  (unused if gloo.enabled)
  store: 
    #type: s3                                                         # store non-Mongo data in S3
    type: file                                                        # store non-Mongo data on file system
  secrets:
    external:
      #source: "awsSecretsManager"                                    # external secrets are loaded from aws
      source: "local"                                                 # external secrets are by other means
    internal:
      source: "helm"                                                  # internal secrets are randominly generated 
      #source: "awsSecretsManager"                                    # internal secrets are loaded from aws
      #source: "other"                                                # internal secrets are provided by other means
  linkerd: disabled
  ports:
    blip: 3000                                                        # blip service internal port
    export: 9300                                                      # export service internal port
    gatekeeper: 9123                                                  # gatekeeper service internal port
    highwater: 9191                                                   # highwater service internal port
    hydrophone: 9157                                                  # hydrophone service internal port
    jellyfish: 9122                                                   # jellyfish service internal port
    messageapi: 9119                                                  # messageapi service internal port
    auth: 9222                                                        # auth service internal port
    blob: 9225                                                        # blob service internal port
    data: 9220                                                        # data service internal port
    image: 9226                                                       # image service internal port
    notification: 9223                                                # notification service internal port
    task: 9224                                                        # task service internal port
    user: 9221                                                        # user service internal port
    seagull: 9120                                                     # seagull service internal port
    shoreline: 9107                                                   # shoreline service internal port
    tidewhisperer: 9127                                               # tidewhisperer service internal port
  aws:
    region: us-west-2                                                 # AWS region service to be deployed in
  environment: production                                             #
  fullnameOverride: ""                                                #
  namespace:
    create: false                                                     # whether to create the namespace for the service
  nameOverride: ""                                                    # the name to use for the helm chart, if given
  mongo:
    await: 'false'                                                    # whether to await for mongo to be ready before starting services
    hosts: "mongodb"                                                  # comma-separated list of Mongo hosts
    port: 27017                                                       # the Mongo port
    username: ''                                                      # a username in the Mongo instance
    ssl: 'false'                                                      # whether to use SSL to communicate with Mongo
    optParams: ''                                                     # optional parameters to pass on the Mongo connection string
  provider:
    dexcom:
      token:
        url: 'https://api.dexcom.com/v1/oauth2/token'                 # the url to retrieve an Oauth2 token from Dexcom
      authorize:
        url: 'https://api.dexcom.com/v1/oauth2/login?prompt=login'    # the url to get authorization from Dexcom
      client:
        url: "https://api.dexcom.com"                                 # the Dexcom client API url

  resources:                                                          # the resources for each service
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 32Mi
    #
  securityContext:                                                    # the security context for all services
    allowPrivilegeEscalation: false
    runAsNonRoot: true                                                # we don't need root access
    runAsUser: 10101
    capabilities:
      drop:
      - ALL

# Tidepool services
blip:
  image: tidepool/blip:release-1.23.0-264f7ad48eb7d8099b00dce07fa8576f7068d0a0
export:
  image: tidepool/export:develop-c67e1425a4f6eb4c3f70f95284a24899a9ff986f
  enabled: true
gatekeeper:
  image: tidepool/gatekeeper:develop-6a0e3e6d83552ce378b21d76354973dcb95c9fa1
highwater:
  image: tidepool/highwater:develop-aaefb43df9a132f6c012f7216952e8650e6f6b4a
hydrophone:
  image: tidepool/hydrophone:develop-0683c6ba2c75ffd21ac01cd577acfeaf5cd0ef8f
  fromAddress: "Tidepool <noreply@tidepool.org>"                      # from address for emails that we send
  #bucket: ''                                                         # S3 bucket with email templates
jellyfish:
  enabled: true
  image: tidepool/jellyfish:develop-2ed5f94724055c613be193cfbbbc3a8e41919de1
messageapi:
  image: tidepool/message-api:develop-448835b6be0c27185e487f582f9b47a784aa781f
  window: 21
auth:
  image: tidepool/platform-auth:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
blob:
  image: tidepool/platform-blob:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
  directory: "_data/blobs"                                            # directory to use if using local file storage
  prefix: "blobs"                                                     # prefix to use if using local file storage
data:
  image: tidepool/platform-data:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
image:
  image: tidepool/platform-image:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
  directory: "_data/image"                                            # directory to use if using local file storage
  prefix: "images"                                                    # prefix to use if using local file storage
migrations:
  enabled: true
  image: tidepool/platform-migrations:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
notification:
  image: tidepool/platform-notification:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
task:
  image: tidepool/platform-task:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
tools:
  enabled: true
  image: tidepool/platform-tools:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
user:
  image: tidepool/platform-user:develop-e95a3af6080aab5b845d1531015f0c5fd7134f80
seagull:
  image: tidepool/seagull:develop-b06870d3752afede7da24116763fd5a161b84da0
shoreline:
  image: tidepool/shoreline:develop-169c2a61c33d31bb185663cf0033fd2a364d3492
tidewhisperer:
  image: tidepool/tide-whisperer:develop-3d9d8e6b3417c70679ec43420f2a5e4a69cf9098


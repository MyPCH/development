apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: shoreline
    helm.sh/chart: {{ include "charts.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: shoreline
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "tidepool-server-secret,mongo,shoreline"
    configmap.reloader.stakater.com/reload: "shoreline"
spec:
  selector:
    matchLabels:
      app: shoreline
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: shoreline
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        linkerd.io/inject: "{{ .Values.global.linkerd }}"
    spec:
      containers:
      - env:
        {{ include "charts.mongo.params" .}}
        - name: TIDEPOOL_STORE_DATABASE
          value: user
        - name: CLINIC_LISTS
          valueFrom:
            secretKeyRef:
              name: mailchimp
              key: MailchimpClinicLists
              optional: true
        - name: MAILCHIMP_URL
          valueFrom:
            secretKeyRef:
              name: mailchimp
              key: MailchimpURL
              optional: true
        - name: PERSONAL_LISTS
          valueFrom:
            secretKeyRef:
              name: mailchimp
              key: MailchimpPersonalLists
              optional: true
        - name: DEMO_CLINIC_USER_ID
          valueFrom:
            configMapKeyRef:
              name: shoreline
              key: ClinicDemoUserId
              optional: true
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: tidepool-server-secret
              key: ServiceAuth
        - name: API_SECRET
          valueFrom:
            secretKeyRef:
              name: shoreline
              key: ServiceAuth
              optional: true
        - name: SALT
          valueFrom:
            secretKeyRef:
              name: shoreline
              key: UserPasswordSalt
              optional: true
        - name: VERIFICATION_SECRET
          valueFrom:
            secretKeyRef:
              name: shoreline
              key: UserMailVerification
              optional: true
        - name: LONG_TERM_KEY
          valueFrom:
            secretKeyRef:
              name: shoreline
              key: UserLongTermKey 
              optional: true
        - name: MAILCHIMP_APIKEY
          valueFrom:
            secretKeyRef:
              name: mailchimp
              key: MailchimpApiKey
              optional: true
        - name: TIDEPOOL_SHORELINE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:{{.Values.global.ports.gatekeeper}}"]}},
                "hakken": {
                  "host": "hakken",
                  "skipHakken": true
                },
                "highwater": {
                    "metricsSource": "shoreline",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://highwater:{{.Values.global.ports.highwater}}"]}
                }
            }
        - name: TIDEPOOL_SHORELINE_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": ""
                },
                "oauth2": {
                    "expireDays": 14
                },
                "service": {
                    "host": "localhost:{{.Values.global.ports.shoreline}}",
                    "protocol": "http",
                    "service": "shoreline"
                },
                "user": {
                    "longTermDaysDuration": 30,
                    "tokenDurationSecs": 2592000
                }
            }
        image: "{{ .Values.shoreline.image }}"
        livenessProbe:
          httpGet:
            path: /status
            port: {{.Values.global.ports.shoreline}}
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shoreline
        ports:
        - containerPort: {{.Values.global.ports.shoreline}}
        resources:
          {{- toYaml .Values.global.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.global.securityContext | nindent 10 }}
      restartPolicy: Always

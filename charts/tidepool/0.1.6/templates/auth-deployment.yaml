apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: auth
    helm.sh/chart: {{ include "charts.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: auth
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "tidepool-server-secret,mongo,dexcom-api,auth"
spec:
  selector:
    matchLabels:
      app: auth
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: auth
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        linkerd.io/inject: "{{ .Values.global.linkerd }}"
    spec:
      initContainers:
      {{ include "charts.init.shoreline" .}}
      containers:
      - env:
        {{ include "charts.platform.env.mongo" .}}
        {{ include "charts.platform.env.misc" .}}
        {{ include "charts.platform.env.dexcom" .}}
        {{ include "charts.platform.env.clients" .}}
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: {{include "charts.host.internal.tp" .}}.{{.Release.Namespace}}
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :{{.Values.global.ports.auth}}
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: auth
              key: ServiceAuth
        image: "{{ .Values.auth.image }}"
        {{ template "charts.platform.probes" .Values.global.ports.auth}}
        name: auth
        ports:
        - containerPort: {{.Values.global.ports.auth}}
        resources:
          {{- toYaml .Values.global.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.global.securityContext | nindent 10 }}
      restartPolicy: Always

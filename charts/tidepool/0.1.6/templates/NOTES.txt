Thank you for installing {{ .Chart.Name }}.

Your release is named {{ .Release.Name }}.

To learn more about the release, try:

  $ helm status {{ .Release.Name }}
  $ helm get {{ .Release.Name }}

{{ if eq  .Values.global.secrets.internal.source "helm"}}

The Tidepool services rely on various secrets to encrypt and decrypt
data.  The app.tidepool.org web service stores and retrieves these secrets from
the Amazon Secrets Manager.  If you are running locally, you need to provide
those secrets.

Some of those secrets are provided by or shared with third parties
(e.g. Dexcom, Mailchimp, UCSF).  You need to supply these in the
form of Kubernetes Secret manifests.  If you do not provide them,
then the associated services are not available.  Look in the
deployment files for secrets that are marked optional.

Other secrets are for used only within your Tidepool environments.
You have just generated those with Helm.

Each time you install this Helm chart, a new set of secrets are
generated.  This is fine, IF you throw away all you data between
installations.  However, if you persist your data, then you need
to keep the same secrets from one installation to the next.

To do that, after the first successful helm installation, you will
need to run this shell script so extract your secrets from your
Kubernetes cluster and save them in local files:

for secret in $(kubectl get secrets -o=jsonpath='{.items[?(@.type=="Opaque")].metadata.name}')
do
    kubectl get secrets $secret -o yaml > $secret.yaml
done

These are the secrets that helm generated for you.  If you rerun
helm install later, you will need to use these secrets and NOT the
secrets that it would generate.  To turn off secret generation, add
the setting when running `helm install`:

  --set "global.secrets.internal.source=other"

To load the secret file, in the directory where you stored your secrets, run:

  kubectl apply -f *.yaml
{{ end }}




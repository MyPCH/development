apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: hydrophone
    helm.sh/chart: {{ include "charts.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: hydrophone
  namespace: {{.Release.Namespace}}
spec:
  selector:
    matchLabels:
      app: hydrophone
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: hydrophone
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{ include "charts.init.mongo" .}}
      containers:
      - env:
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: REGION
          value: {{.Values.aws.region}}            
        - name: TIDEPOOL_HYDROPHONE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://{{.Values.gatekeeper.host}}:{{.Values.gatekeeper.port}}"]}},
                "hakken": {
                  "host": "{{.Values.hakken.host}}:{{.Values.hakken.port}}",
                  "skipHakken": {{.Values.hakken.skip}}
                },
                "highwater": {
                    "metricsSource": "hydrophone",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://{{.Values.highwater.host}}:{{.Values.highwater.port}}"]}
                },
                "seagull": {"serviceSpec": {"type": "static", "hosts": ["http://{{.Values.seagull.host}}:{{.Values.seagull.port}}"]}},
                "shoreline": {
                    "name": "hydrophone",
                    "serviceSpec": {"type": "static", "hosts": ["http://{{.Values.shoreline.host}}:{{.Values.shoreline.port}}"]},
                    "tokenRefreshInterval": "1h"
                }
            }
        - name: TIDEPOOL_HYDROPHONE_SERVICE
          value: |
            {
                "hydrophone": {
                    "assetUrl": "{{include "charts.hydrophone.s3.url" .}}",
                    "webUrl": "{{- include "charts.protocol" -}}://{{- include "charts.host.external.app" . -}}"
                },
                "mongo": {
                    "connectionString": "mongodb://{{include "charts.mongo.start" .}}/confirm{{include "charts.mongo.end" .}}"
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:{{.Values.hydrophone.port}}",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "hydrophone"
                },
                "sesEmail": {
                    "fromAddress": "{{.Values.hydrophone.ses.fromAddress}}"
                }
            }
        image: "{{ .Values.hydrophone.image }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /status
            port: {{.Values.hydrophone.port}}
          initialDelaySeconds: 30
          periodSeconds: 10
        name: hydrophone
        ports:
        - containerPort: {{.Values.hydrophone.port}}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      restartPolicy: Always
status: {}

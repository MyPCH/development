---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tide-whisperer
{{ include "charts.labels.standard" .}}
  name: tide-whisperer
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,mongo,auth"
spec:
  selector:
    matchLabels:
      app: tide-whisperer
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.deployment.replicas | default 1 }}
  strategy: {}
  template:
    metadata:
      labels:
        app: tide-whisperer
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
{{ if .Values.podAnnotations }}
      annotations:
        {{- .Values.podAnnotations | toYaml | nindent 8 }}
{{- end }}
    spec:
      initContainers:
      {{ include "charts.init.shoreline" . }}
      containers:
      - env:
        {{- include "charts.mongo.params" . }}
        - name: TIDEPOOL_STORE_DATABASE
          value: data
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server
              key: ServiceAuth
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: auth
              key: ServiceAuth
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: "http://auth:{{.Values.global.ports.auth}}"
        - name: TIDEPOOL_SEAGULL_CLIENT_ADDRESS
          value: "http://seagull:{{.Values.global.ports.seagull}}"
        - name: TIDEPOOL_SHORELINE_CLIENT_ADDRESS
          value: "http://shoreline:{{.Values.global.ports.shoreline}}"
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: "http://gatekeeper:{{.Values.global.ports.gatekeeper}}"
        - name: PORT
          value: "{{.Values.global.ports.tidewhisperer}}"
        image: "{{ .Values.deployment.image }}"
        readinessProbe:
          httpGet:
            path: /ready
            port: {{.Values.global.ports.tidewhisperer}}
          initialDelaySeconds: 30
        livenessProbe:
          httpGet:
            path: /live
            port: {{.Values.global.ports.tidewhisperer}}
          initialDelaySeconds: 3
          periodSeconds: 10
        name: tide-whisperer
        ports:
        - containerPort: {{.Values.global.ports.tidewhisperer}}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      securityContext:
          {{- toYaml .Values.securityContext | nindent 8 }}
      restartPolicy: Always

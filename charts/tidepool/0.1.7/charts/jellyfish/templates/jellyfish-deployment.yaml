---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfish
{{ include "charts.labels.standard" .}}
  name: jellyfish
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,mongo,jellyfish"
spec:
  selector:
    matchLabels:
      app: jellyfish
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
{{ if .Values.jellyfish.podAnnotations }}
      annotations:
        {{- .Values.jellyfish.podAnnotations | toYaml | nindent 8 }}
{{- end }}
      labels:
        app: jellyfish
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - env:
        {{ include "charts.mongo.params" .}}
        - name: TIDEPOOL_STORE_DATABASE
          value: 'data'
        - name: SKIP_HAKKEN
          value: "true"
        - name: DISCOVERY_HOST
          value: 'hakken'
        - name: GATEKEEPER_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "gatekeeper:{{.Values.gatekeeper.service.port}}"}]}'
        - name: MINIMUM_UPLOADER_VERSION
          value: 0.251.0
        - name: NODE_ENV
          value: '{{.Values.jellyfish.nodeEnvironment}}'
        - name: PORT
          value: "{{.Values.jellyfish.service.port}}"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SALT_DEPLOY
          valueFrom:
            secretKeyRef:
              name: jellyfish
              key: CarelinkSalt
        - name: SCHEMA_VERSION
          value: "3"
        - name: SEAGULL_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "seagull:{{.Values.seagull.service.port}}"}]}'
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server
              key: ServiceAuth
        - name: SERVE_STATIC
          value: dist
        - name: SERVICE_NAME
          value: jellyfish
        - name: STORAGE_TYPES
          value: '{"s3": {"type": "aws/s3", "encryption": "none", "region": "{{.Values.global.region}}", "bucket": "{{ .Values.jellyfish.deployment.env.store.s3.bucket }}" }}'
        - name: STORAGE_DEFAULT
          value: '{{ .Values.jellyfish.deployment.env.store.type }}'
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:{{.Values.shoreline.service.port}}"}]}'
        image: "{{ .Values.jellyfish.deployment.image }}"
        livenessProbe:
          httpGet:
            path: /status
            port: {{ .Values.jellyfish.service.port }}
          initialDelaySeconds: 3
          periodSeconds: 10
        name: jellyfish
        ports:
        - containerPort: {{ .Values.jellyfish.service.port }}
        resources:
          {{- toYaml .Values.jellyfish.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.jellyfish.securityContext | nindent 10 }}
      restartPolicy: Always

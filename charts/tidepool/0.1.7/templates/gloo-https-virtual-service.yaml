{{ if .Values.gloo.generate.virtualServices }}
{{- if .Values.ingress.service.https.enabled -}}
{{- $spec := .Values.ingress.gateway.https -}}
{{- $port := $spec.port | default "443" -}}
---
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: https
  namespace: '{{ .Release.Namespace }}'
spec:
  displayName: https
  sslConfig:
    secretRef:
      name: '{{ .Values.ingress.certificate.secretName | default "tls" }}'
      namespace: '{{ $.Release.Namespace }}'
    sniDomains:
{{- range $dnsName := $spec.dnsNames }}
    - '{{ $dnsName }}'
{{- end }}
  virtualHost:
    domains:
{{- range $dnsName := $spec.dnsNames }}
    - '{{ if ne $port "443" -}}{{- printf "%s:%s" $dnsName $port -}} {{- else -}} {{ printf "%s" $dnsName -}}{{- end -}}'
{{- end  }}
{{ if .Values.ingress.service.https.strict }}
    options:
      cors:
        allowCredentials: true
        allowHeaders:
        - authorization
        - content-type
        - x-tidepool-session-token
        - x-tidepool-trace-request
        - x-tidepool-trace-session
        allowMethods:
        - GET
        - POST
        - PUT
        - PATCH
        - DELETE
        - OPTIONS
        allowOriginRegex:
        - .*
        exposeHeaders:
        - x-tidepool-session-token
        - x-tidepool-trace-request
        - x-tidepool-trace-session
        maxAge: 600s
      headerManipulation:
        requestHeadersToAdd:
        - header:
            key: Strict-Transport-Security
            value: max-age=31536000
{{ end }}
    routes:
    - matchers:
      - prefix: '/'
      delegateAction:
        name: 'tidepool-routes'
        namespace: {{ .Release.Namespace }}
{{ end -}}
{{ end -}}

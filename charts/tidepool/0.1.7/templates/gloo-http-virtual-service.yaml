{{- if .Values.ingress.service.http.enabled -}}
{{- $spec := .Values.ingress.gateway.http -}}
{{- $port := $spec.port | default "80" -}}
---
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: 'gloo-http'
  namespace: '{{ .Release.Namespace }}'
spec:
  displayName: 'http-virtual-service'
  virtualHost:
    domains:
{{- range $dnsName := $spec.dnsNames -}}
{{ if eq $dnsName "*" }}
    - '*'
{{- else }}
    - '{{ if ne $port "80" -}}{{- printf "%s:%s" $dnsName $port -}} {{- else -}} {{ printf "%s" $dnsName -}}{{- end -}}'
{{- end -}}
{{- end }}
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-auth-{{ .Values.global.ports.auth }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-auth-{{ .Values.global.ports.auth }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-auth-{{ .Values.global.ports.auth }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-auth-{{ .Values.global.ports.auth }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-image-{{ .Values.global.ports.image }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-auth-{{ .Values.global.ports.auth }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blob-{{ .Values.global.ports.blob }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-image-{{ .Values.global.ports.image }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-auth-{{ .Values.global.ports.auth }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blob-{{ .Values.global.ports.blob }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blob-{{ .Values.global.ports.blob }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-task-{{ .Values.global.ports.task }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-user-{{ .Values.global.ports.user }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-user-{{ .Values.global.ports.user }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /serverlogin
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-shoreline-{{ .Values.global.ports.shoreline }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-image-{{ .Values.global.ports.image }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-seagull-{{ .Values.global.ports.seagull }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-highwater-{{ .Values.global.ports.highwater }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-hydrophone-{{ .Values.global.ports.hydrophone }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-message-api-{{ .Values.global.ports.messageapi }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-task-{{ .Values.global.ports.task }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-data-{{ .Values.global.ports.data }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routePlugins:
        timeout: '2m'
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-export-{{ .Values.global.ports.export }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-gatekeeper-{{ .Values.global.ports.gatekeeper }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-shoreline-{{ .Values.global.ports.shoreline }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-tide-whisperer-{{ .Values.global.ports.tidewhisperer }}'
            namespace: '{{ .Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
            namespace: '{{ .Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: '{{ .Release.Namespace }}-blip-{{ .Values.global.ports.blip }}'
            namespace: '{{ .Release.Namespace }}'
{{ else }}
---
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: 'gloo-http'
  namespace: '{{ .Release.Namespace }}'
spec:
  displayName: 'http-virtual-service'
  virtualHost:
    domains:
{{- range $dnsName := .Values.ingress.gateway.https.dnsNames }}
    - '{{ $dnsName }}'
{{- end }}
    routes:
    - matcher:
        prefix: '/'
      redirectAction:
        httpsRedirect: true
{{- end -}}

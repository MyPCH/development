---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tide-whisperer
    helm.sh/chart: {{ include "charts.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: tide-whisperer
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "tidepool-server-secret,mongo,auth"
spec:
  selector:
    matchLabels:
      app: tide-whisperer
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: tide-whisperer
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        linkerd.io/inject: "{{ .Values.global.linkerd }}"
    spec:
      initContainers:
      {{ include "charts.init.shoreline" . }}
      containers:
      - env:
        {{- include "charts.mongo.params" . }}
        - name: TIDEPOOL_STORE_DATABASE
          value: data
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: tidepool-server-secret
              key: ServiceAuth
        - name: AUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: auth
              key: ServiceAuth
        - name: TIDEPOOL_TIDE_WHISPERER_ENV
          value: |
            {
                "auth": {
                  "address": "http://auth:{{.Values.global.ports.auth}}",
                  "userAgent": "Tidepool-TideWhisperer"
                },
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:{{.Values.global.ports.gatekeeper}}"]}},
                "hakken": {
                  "host": "hakken",
                  "skipHakken": true
                  },
                "seagull": {"serviceSpec": {"type": "static", "hosts": ["http://seagull:{{.Values.global.ports.seagull}}"]}},
                "shoreline": {
                    "name": "tide-whisperer",
                    "serviceSpec": {"type": "static", "hosts": ["http://shoreline:{{.Values.global.ports.shoreline}}"]},
                    "tokenRefreshInterval": "1h"
                }
            }
        - name: TIDEPOOL_TIDE_WHISPERER_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": ""
                },
                "schemaVersion": {
                    "maximum": 99,
                    "minimum": 1
                },
                "service": {
                    "host": "localhost:{{.Values.global.ports.tidewhisperer}}",
                    "protocol": "http",
                    "service": "tide-whisperer"
                }
            }
        image: "{{ .Values.tidewhisperer.image }}"
        livenessProbe:
          httpGet:
            path: /status
            port: {{.Values.global.ports.tidewhisperer}}
          initialDelaySeconds: 30
          periodSeconds: 10
        name: tide-whisperer
        ports:
        - containerPort: {{.Values.global.ports.tidewhisperer}}
        environment.resources:
          {{- toYaml .Values.global.environment.resources | nindent 10 }}
        environment.securityContext:
          {{- toYaml .Values.global.environment.securityContext | nindent 10 }}
      restartPolicy: Always

apiVersion: gateway.solo.io/v1
kind: RouteTable
metadata:
  name: tidepool-routes
  namespace: {{ .Release.Name }}
spec:
  routes:
  - matcher:
      methods:
      - GET
      - POST
      - DELETE
      regex: /v1/users/[^/]+/restricted_tokens
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-auth-{{ .Values.global.ports.auth }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - POST
      - DELETE
      regex: /v1/users/[^/]+/provider_sessions
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-auth-{{ .Values.global.ports.auth }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /request-password-from-uploader
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - POST
      - DELETE
      - OPTIONS
      regex: /v1/users/[^/]+/data_sources
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - PUT
      - DELETE
      regex: /v1/provider_sessions/[^/]+
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-auth-{{ .Values.global.ports.auth }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /verification-with-password
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - POST
      prefix: /event/csp-report/violation
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - DELETE
      regex: /v1/oauth/[^/]+/authorize
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-auth-{{ .Values.global.ports.auth }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      regex: /v1/users/[^/]+/data_sets
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - POST
      - DELETE
      regex: /v1/users/[^/]+/images/.+
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-image-{{ .Values.global.ports.image }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      regex: /v1/oauth/[^/]+/redirect
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-auth-{{ .Values.global.ports.auth }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - POST
      regex: /v1/users/[^/]+/datasets
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /request-password-reset
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /confirm-password-reset
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      regex: /v1/blobs/[^/]+/content
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blob-{{ .Values.global.ports.blob }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - PUT
      - DELETE
      regex: /v1/data_sources/[^/]+
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - POST
      - DELETE
      regex: /v1/users/[^/]+/images
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-image-{{ .Values.global.ports.image }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - PUT
      - DELETE
      prefix: /v1/restricted_tokens
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-auth-{{ .Values.global.ports.auth }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - POST
      - DELETE
      regex: /v1/users/[^/]+/blobs
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blob-{{ .Values.global.ports.blob }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - DELETE
      regex: /v1/users/[^/]+/data
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - POST
      prefix: /v1/device/upload/cl
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /email-verification
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /clinician-details
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /v1/device/data/"
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /browser-warning
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - DELETE
      regex: /v1/blobs/[^/]+
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blob-{{ .Values.global.ports.blob }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - PUT
      - DELETE
      regex: /v1/tasks/[^/*]
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-task-{{ .Values.global.ports.task }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - DELETE
      regex: /v1/users/[^/*]
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-user-{{ .Values.global.ports.user }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /dataservices/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      prefix: /v1/synctasks/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /userservices/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-user-{{ .Values.global.ports.user }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      prefix: /v1/data_sets
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - POST
      - PUT
      - DELETE
      prefix: /v1/datasets
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - POST
      prefix: /serverlogin
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-shoreline-{{ .Values.global.ports.shoreline }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - PUT
      - DELETE
      prefix: /v1/images
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-image-{{ .Values.global.ports.image }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /metadata/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-seagull-{{ .Values.global.ports.seagull }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      prefix: /patients
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /v1/data/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /metrics/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-highwater-{{ .Values.global.ports.highwater }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /confirm/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-hydrophone-{{ .Values.global.ports.hydrophone }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /message/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-message-api-{{ .Values.global.ports.messageapi }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      - POST
      prefix: /v1/tasks
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-task-{{ .Values.global.ports.task }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /profile
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /v1/time
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-data-{{ .Values.global.ports.data }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /export/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-export-{{ .Values.global.ports.export }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /access/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-gatekeeper-{{ .Values.global.ports.gatekeeper }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /signup
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /terms
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - POST
      prefix: /data/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      - OPTIONS
      - POST
      - PUT
      - PATCH
      - DELETE
      prefix: /auth/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-shoreline-{{ .Values.global.ports.shoreline }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      prefix: /data/
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-tide-whisperer-{{ .Values.global.ports.tidewhisperer }}'
          namespace: '{{ .Release.Name }}'
    routePlugins:
      prefixRewrite:
        prefixRewrite: /
  - matcher:
      methods:
      - GET
      prefix: /info
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-jellyfish-{{ .Values.global.ports.jellyfish }}'
          namespace: '{{ .Release.Name }}'
  - matcher:
      methods:
      - GET
      prefix: /
    routeAction:
      single:
        upstream:
          name: '{{ .Release.Name }}-blip-{{ .Values.global.ports.blip }}'
          namespace: '{{ .Release.Name }}'

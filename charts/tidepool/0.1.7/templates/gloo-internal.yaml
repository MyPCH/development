# Auto-generated file by gloo_gateway. Do not edit.
{{- $relname := .Release.Name -}}

---
# file: gloo-auth-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-auth-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: auth
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-auth:80-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-auth:80-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: auth:80
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-blip-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-blip-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: blip
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-blob-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-blob-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: blob
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-data-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-data-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: data
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-export-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-export-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: export
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-gatekeeper-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-gatekeeper-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: gatekeeper
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-highwater-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-highwater-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: highwater
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-hydrophone-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-hydrophone-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: hydrophone
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-image-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-image-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: image
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-internal-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: internal
  namespace: '{{ $.Release.Namespace }}'
spec:
  displayName: internal
  virtualHost:
    domains:
    - internal.{{ $.Release.Namespace }}
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-image-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth:80-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blob-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-image-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blob-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blob-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-task-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-user-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-user-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /serverlogin
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-shoreline-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-image-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-seagull-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-highwater-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-hydrophone-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-message-api-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-task-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-export-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-gatekeeper-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-shoreline-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-tide-whisperer-80'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-80'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-80'
            namespace: '{{ $.Release.Namespace }}'
---
# file: gloo-jellyfish-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-jellyfish-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: jellyfish
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-message-api-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-message-api-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: message-api
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-seagull-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-seagull-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: seagull
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-shoreline-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-shoreline-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: shoreline
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-task-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-task-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: task
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-tide-whisperer-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-tide-whisperer-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: tide-whisperer
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80
---
# file: gloo-user-80-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-user-80'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: user
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 80


{{- $relname := .Release.Name -}}

# file: gloo-internal-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: internal
  namespace: '{{ $.Release.Namespace }}'
spec:
  displayName: internal
  virtualHost:
    domains:
    - internal.{{ $.Release.Namespace }}
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-{{ $.Values.global.ports.auth }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-{{ $.Values.global.ports.auth }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /request-password-from-uploader
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-{{ $.Values.global.ports.auth }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /verification-with-password
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /event/csp-report/violation
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-{{ $.Values.global.ports.auth }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-image-{{ $.Values.global.ports.image }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-{{ $.Values.global.ports.auth }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /request-password-reset
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /confirm-password-reset
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blob-{{ $.Values.global.ports.blob }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-image-{{ $.Values.global.ports.image }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-auth-{{ $.Values.global.ports.auth }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blob-{{ $.Values.global.ports.blob }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /v1/device/upload/cl
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-{{ $.Values.global.ports.jellyfish }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /email-verification
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /clinician-details
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /v1/device/data/"
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-{{ $.Values.global.ports.jellyfish }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /browser-warning
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blob-{{ $.Values.global.ports.blob }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-task-{{ $.Values.global.ports.task }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-user-{{ $.Values.global.ports.user }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/synctasks/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-{{ $.Values.global.ports.jellyfish }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-user-{{ $.Values.global.ports.user }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /serverlogin
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-shoreline-{{ $.Values.global.ports.shoreline }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-image-{{ $.Values.global.ports.image }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-seagull-{{ $.Values.global.ports.seagull }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /patients
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-highwater-{{ $.Values.global.ports.highwater }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-hydrophone-{{ $.Values.global.ports.hydrophone }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-message-api-{{ $.Values.global.ports.messageapi }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-task-{{ $.Values.global.ports.task }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /profile
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-data-{{ $.Values.global.ports.data }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routePlugins:
        timeout: '2m'
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-export-{{ $.Values.global.ports.export }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-gatekeeper-{{ $.Values.global.ports.gatekeeper }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /signup
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /terms
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - POST
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-{{ $.Values.global.ports.jellyfish }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-shoreline-{{ $.Values.global.ports.shoreline }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-tide-whisperer-{{ $.Values.global.ports.tidewhisperer }}'
            namespace: '{{ $.Release.Namespace }}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /info
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-jellyfish-{{ $.Values.global.ports.jellyfish }}'
            namespace: '{{ $.Release.Namespace }}'
    - matcher:
        methods:
        - GET
        prefix: /
      routeAction:
        single:
          upstream:
            name: '{{ $.Release.Namespace }}-blip-{{ $.Values.global.ports.blip }}'
            namespace: '{{ $.Release.Namespace }}'
---
# file: gloo-auth-9222-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-auth-9222'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: auth
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9222
---
# file: gloo-blip-3000-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-blip-3000'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: blip
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 3000
---
# file: gloo-blob-9225-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-blob-9225'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: blob
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9225
---
# file: gloo-data-9220-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-data-9220'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: data
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9220
---
# file: gloo-export-9300-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-export-9300'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: export
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9300
---
# file: gloo-gatekeeper-9123-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-gatekeeper-9123'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: gatekeeper
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9123
---
# file: gloo-highwater-9191-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-highwater-9191'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: highwater
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9191
---
# file: gloo-hydrophone-9157-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-hydrophone-9157'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: hydrophone
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9157
---
# file: gloo-image-9226-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-image-9226'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: image
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9226
---
# file: gloo-jellyfish-9122-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-jellyfish-9122'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: jellyfish
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9122
---
# file: gloo-message-api-9119-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-message-api-9119'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: message-api
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9119
---
# file: gloo-seagull-9120-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-seagull-9120'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: seagull
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9120
---
# file: gloo-shoreline-9107-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-shoreline-9107'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: shoreline
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9107
---
# file: gloo-task-9224-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-task-9224'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: task
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9224
---
# file: gloo-tide-whisperer-9127-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-tide-whisperer-9127'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: tide-whisperer
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9127
---
# file: gloo-user-9221-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{ $.Release.Namespace }}-user-9221'
  namespace: '{{ $.Release.Namespace }}'
spec:
  upstreamSpec:
    kube:
      serviceName: user
      serviceNamespace: '{{ $.Release.Namespace }}'
      servicePort: 9221


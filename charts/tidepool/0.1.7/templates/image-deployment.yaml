---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: image
{{ include "charts.labels.standard .}}
  name: image
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,mongo,image"
spec:
  selector:
    matchLabels:
      app: image
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: "{{ include "charts.worker.role" . }}"
        linkerd.io/inject: "{{ .Values.global.cluster.mesh.enabled }}"
      labels:
        app: image
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      {{ include "charts.init.shoreline" .}}
      containers:
      - env:
        {{ include "charts.platform.env.mongo" .}}
        {{ include "charts.platform.env.misc" .}}
        {{ include "charts.platform.env.clients" .}}
        - name: TIDEPOOL_IMAGE_SERVICE_SECRET
          valueFrom:
            secretKeyRef:
              name: image
              key: ServiceAuth 
        - name: TIDEPOOL_IMAGE_SERVICE_SERVER_ADDRESS
          value: :{{.Values.image.service.port}}
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: '{{.Values.global.environment.store.type}}'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '{{.Values.image.deployment.env.directory}}'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: '{{include "charts.blob.s3.bucket" .}}'
        - name: TIDEPOOL_IMAGE_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: '{{.Values.image.deployment.env.prefix}}' 
        image: "{{ .Values.image.deployment.image }}"
        {{ template "charts.platform.probes" .Values.image.service.port }}
        name: image
        ports:
        - containerPort: {{.Values.image.service.port}}
        resources:
          {{- toYaml .Values.global.environment.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.global.environment.securityContext | nindent 10 }}
      restartPolicy: Always

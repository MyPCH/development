---
{{- define "charts.hydrophone.s3.bucket" -}}
{{- if (.Values.hydrophone.deployment.env.bucket) and (ne .Values.hydrophone.deployment.env.bucket "") -}}
{{ .Values.hydrophone.deployment.env.bucket }}
{{- else -}}
tidepool-{{ .Release.Namespace }}-asset
{{- end -}}
{{- end -}}
{{- define "charts.hydrophone.s3.url" -}} {{include "charts.s3.url" .}}/{{include "charts.hydrophone.s3.bucket" .}} {{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hydrophone
{{ include "charts.labels.standard" .}}
  name: hydrophone
  namespace: {{.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "server,mongo"
spec:
  selector:
    matchLabels:
      app: hydrophone
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
{{ if .Values.hydrophone.podAnnotations }}
      annotations:
        {{- .Values.hydrophone.podAnnotations | toYaml | nindent 8 }}
{{- end }}
      labels:
        app: hydrophone
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - env:
        {{ include "charts.mongo.params" .}}
        - name: TIDEPOOL_STORE_DATABASE
          value: confirm
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server
              key: ServiceAuth
        - name: REGION
          value: {{.Values.global.cluster.region}}            
        - name: TIDEPOOL_HYDROPHONE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper"]}},
                "hakken": {
                  "host": "hakken",
                  "skipHakken": true
                },
                "highwater": {
                    "metricsSource": "hydrophone",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://highwater"]}
                },
                "seagull": {"serviceSpec": {"type": "static", "hosts": ["http://seagull"]}},
                "shoreline": {
                    "name": "hydrophone",
                    "serviceSpec": {"type": "static", "hosts": ["http://shoreline"]},
                    "tokenRefreshInterval": "1h"
                }
            }
        - name: PROTOCOL
          value: "{{ .Values.ingress.gateway.default.protocol }}"
        - name: TIDEPOOL_HYDROPHONE_SERVICE
          value: |
            {
                "hydrophone": {
                    "assetUrl": {{- include "charts.hydrophone.s3.url" . | quote }},
                    "webUrl": {{- include "charts.host.external.tp" . | quote }} 
                },
                "mongo": {
                    "connectionString": ""
                },
                "service": {
                    "host": "localhost",
                    "protocol": "http",
                    "service": "hydrophone"
                },
                "sesEmail": {
                    "fromAddress": "{{.Values.hydrophone.deployment.env.fromAddress}}"
                }
            }
        image: "{{ .Values.hydrophone.deployment.image }}"
        livenessProbe:
          httpGet:
            path: /status
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        name: hydrophone
        ports:
        - containerPort: 80
        resources:
          {{- toYaml .Values.hydrophone.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.hydrophone.securityContext | nindent 10 }}
      restartPolicy: Always

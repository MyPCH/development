company: 
  email: derrick@tidepool.org
github:
  account: tidepool-org                       # your GitHub account
  user: derrickburns                          # your GitHub user name
  token: ""                                   # a token that allows write/create access to your GitHub account

cluster:
  repo:
    directory: "/Users/derrickburns/go/src/github.com/tidepool-org"
    name: ""                                    # OPTIONAL: name of the repo
    branch: master
  eks: # new level
    iam:
      administrators: # was iamUsers and string
      - derrickburns-cli
      - lennartgoedhard-cli
      - benderr-cli
    configFile: ""                              # location of configuration file
    kubeconfig: ""
    name: "shared"                              # the name of the cluster
    k8sVersion: "1.13"                          # the Kubernetes version >= 1.13
    region: "us-west-2"                         # AWS region to deploy in
    cidr: "10.44.0.0/16"                        # CIDR of AWS VPC
    nodegroup:
      instanceType: "m4.large"
      desiredCapacity: 3
      minSize: 1
      maxSize: 10
  logLevel: debug                               # the default log level for all services
  mesh:
    name: linkerd
    enabled: false
  gateway:                                                          
    proxy:                                                            
      name: gateway-proxy-v2                                             
      namespace: gloo-system  
  thirdPartyServices:
    sumologic: 
      enabled: false
      secret:
        CollectorUrl:  ""                           # Sumologic collector URL
    datadog:
      enabled: false
      secret:
        APIKey: ""                                  # Datadog API key
        AppKey: ""                                  # Datadog Application key
    fluxcloud: 
      enabled: false
      secret:
        url: ""                                     # Slack Webhook url
    externalDNS: # new level
      enabled: false
      hostnames: []                             # list of hosts to publish to DNS
environments:
  qa1:
    gitops: 
      automated: true
      selector: glob
      filter: "develop-*"
      #selector: regex
      #filter: "^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$"
 
    secrets:
      src: helm
      dest: awsSecretsManager
      operation: upsert
    global:
      hosts:
        default:
          protocol: https                                                 # the protocol to use for signup emails
        http:                                                            
          enabled: false
        https:                                                           
          enabled: true 
          port: "443"                                                    # default HTTPS port - must be quoted
          dnsNames:                                                      # list of DNS names
          - qa1.tidepool.org
          certificateIssuer: "letsencrypt-staging"                       # the name of the certificate issuer
      store: 
        type: s3                                                         # store non-Mongo data in S3
      nodeEnvironment: production                   #
    sharedInternalSecrets:
      mongo:  
        secret:
          Scheme: mongodb
          Addresses: cluster0-shard-00-01-hu2cn.mongodb.net:27017,cluster0-shard-00-00-hu2cn.mongodb.net:27017,cluster0-shard-00-02-hu2cn.mongodb.net:27017
          Username: derrickburns
          Tls: "true"
          Password: ""
          Database: ""
      gloo:
        enabled: true
        settings:
          create: true
        discovery:
          fdsMode: WHITELIST
        namespace:
          create: false
        gatewayProxies:
          gatewayProxyV2:
            service:
              httpPort: 8080                                               # HTTP port to listen on
              #httpsPort: 8443                                             # HTTPS port to listen on
              type: ClusterIP                                              # Type of service to create (alternative: ClusterIP)
              #extraAnnotations:                                           # Use to create an AWS Network Load Balancer 
                #service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      mongodb:
        enabled: false
        image:
          tag: "3.6"
        persistence:
          enabled: false
        fullnameOverride: "mongodb"
    externallySharedSecrets: {}

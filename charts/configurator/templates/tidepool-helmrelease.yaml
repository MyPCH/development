{{ $cluster := .Values.global.cluster }}
{{ range $name, $spec := .Values.env }}
---
apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: tidepool
  namespace: {{ $name }}
  annotations:
    flux.weave.works/automated: "true"
    flux.weave.works/tag.auth: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.blip: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.blob: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.data: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.export: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.gatekeeper: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.highwater: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.hydrophone: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.image: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.jellyfish: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.messageapi: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.migrations: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.notification: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.seagull: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.shoreline: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.task: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.tidewhisperer: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.tools: glob:{{ $spec.gitops.branch }}-*
    flux.weave.works/tag.user: glob:{{ $spec.gitops.branch }}-*
spec:
  releaseName: {{ $name }}-tidepool
  chart:
    git: git@github.com:tidepool-org/development
    path: charts/tidepool/0.1.6
    ref: k8s
  values:
    nosqlclient:
      enabled: {{ $spec.nosqlclient.enabled }}
    gloo:
      enabled: false
    mongodb:
      enabled: false
    global:
      secrets:
        internal:
          source: "other"
        external:
          source: "other"
      clusterName: {{ $cluster.name }}
      store:
        type: s3
      hosts:
        default: 
          protocol: {{ $spec.hosts.default.protocol }}
{{ if eq $spec.hosts.default.protocol "http" }}
          host: {{ $spec.hosts.http.dnsNames | first | quote }}
{{- else }}
          host: {{ $spec.hosts.https.dnsNames | first | quote }}
{{- end -}}
{{- if $spec.hosts.https.enabled }}
        https:
          enabled: true
          commonName: {{ $spec.hosts.https.dnsNames | first | quote }}
          secretName: {{ $name }}-tls-secret
          certificateIssuer: {{ $spec.hosts.https.certificateIssuer | quote }}
          dnsNames:
          {{- $spec.hosts.https.dnsNames | toYaml | nindent 10 }}
{{- end -}}
{{ if $spec.hosts.http.enabled }}
        http:
          enabled: true
          dnsNames:
          {{- $spec.hosts.http.dnsNames | toYaml | nindent 10 }}
{{- end }}
      namespace:
        create: false
{{- end }}

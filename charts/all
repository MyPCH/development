---
# Source: backend/templates/mailhog-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mailhog
  name: mailhog
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
# Source: backend/templates/mongo-persistentvolumeclaim.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
# Source: backend/templates/api-service.yaml
---
apiVersion: v1
kind: Service
metadata:
  name: ambassador-api
  annotations:
    "service.beta.kubernetes.io/aws-load-balancer-backend-protocol": "http"
    "service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled": "true"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
   - port: 8009
     targetPort: 80
  selector:
    service: ambassador



---
# Source: backend/templates/blip-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  blip
      prefix: /
      rewrite: ""
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      service: blip:3000
  creationTimestamp: null
  labels:
    io.kompose.service: blip
  name: blip
spec:
  type: NodePort
  ports:
  - name: "3000"
    port: 3000
    targetPort: 3000
  selector:
    io.kompose.service: blip
status:
  loadBalancer: {}

---
# Source: backend/templates/export-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  export
      prefix: /export/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: export:9300
  creationTimestamp: null
  labels:
    io.kompose.service: export
  name: export
spec:
  ports:
  - name: "9300"
    port: 9300
    targetPort: 9300
  selector:
    io.kompose.service: export
status:
  loadBalancer: {}

---
# Source: backend/templates/gatekeeper-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  gatekeeper-access
      prefix: /access/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: ""
      service: gatekeeper:9123
  creationTimestamp: null
  labels:
    io.kompose.service: gatekeeper
  name: gatekeeper
spec:
  ports:
  - name: "9123"
    port: 9123
    targetPort: 9123
  selector:
    io.kompose.service: gatekeeper

---
# Source: backend/templates/highwater-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  highwater-metrics
      prefix: /metrics/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: "/"
      path_redirect: "false"
      service: highwater:9191
  creationTimestamp: null
  labels:
    io.kompose.service: highwater
  name: highwater
spec:
  ports:
  - name: "9191"
    port: 9191
    targetPort: 9191
  selector:
    io.kompose.service: highwater
status:
  loadBalancer: {}

---
# Source: backend/templates/hydrophone-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  hydrophone-confirm
      prefix: /confirm/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: "/"
      path_redirect: "false"
      service: hydrophone:9157
  creationTimestamp: null
  labels:
    io.kompose.service: hydrophone
  name: hydrophone
spec:
  ports:
  - name: "9157"
    port: 9157
    targetPort: 9157
  selector:
    io.kompose.service: hydrophone
status:
  loadBalancer: {}

---
# Source: backend/templates/jellyfish-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: jellyfish
  name: jellyfish
spec:
  ports:
  - name: "9122"
    port: 9122
    targetPort: 9122
  selector:
    io.kompose.service: jellyfish
status:
  loadBalancer: {}

---
# Source: backend/templates/mailhog-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: mailhog
  name: mailhog
spec:
  ports:
  - name: smtp
    port: 1025
    targetPort: 1025
  - name: http
    port: 8025
    targetPort: 8025
  selector:
    io.kompose.service: mailhog
status:
  loadBalancer: {}

---
# Source: backend/templates/message-api-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  message-api-message
      prefix: /message/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: message-api:9119
  creationTimestamp: null
  labels:
    io.kompose.service: message-api
  name: message-api
spec:
  ports:
  - name: "9119"
    port: 9119
    targetPort: 9119
  selector:
    io.kompose.service: message-api
status:
  loadBalancer: {}

---
# Source: backend/templates/mongo-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    io.kompose.service: mongo
status:
  loadBalancer: {}

---
# Source: backend/templates/platform-auth-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  getambassador.io/config: |
    ---
    apiVersion: ambassador/v1
    kind:  Mapping
    name:  platform-auth-user-restricted-tokens
    prefix: "/v1/users/[^/]+/restricted_tokens"
    prefix_regex: true
    method: "GET|POST|DELETE"
    method_regex: true
    rewrite: ""
    service: platform-auth:9222   
    ---
    apiVersion: ambassador/v1
    kind:  Mapping
    name:  platform-auth-user-provider-sessions
    prefix: "/v1/users/[^/]+/provider_sessions"
    prefix_regex: true
    method: "GET|POST|DELETE"
    method_regex: true
    rewrite: ""
    service: platform-auth:9222   
    ---
    apiVersion: ambassador/v1
    kind:  Mapping
    name:  platform-auth-restricted-tokens
    prefix: "/v1/restricted_tokens"
    method: "GET|PUT|DELETE"
    method_regex: true
    rewrite: ""
    service: platform-auth:9222   
    ---
    apiVersion: ambassador/v1
    kind:  Mapping
    name:  platform-auth-provider-sessions
    prefix: "/v1/provider_sessions/[^/]+"
    method: "GET|PUT|DELETE"
    method_regex: true
    rewrite: ""
    service: platform-auth:9222   
    ---
    apiVersion: ambassador/v1
    kind:  Mapping
    name:  platform-auth-oauth
    prefix: "/v1/oauth/[^/]+/authorize"
    method: "GET|DELETE"
    method_regex: true
    rewrite: ""
    service: platform-auth:9222
    ---
    apiVersion: ambassador/v1
    kind:  Mapping
    name:  platform-auth-oauth
    prefix: "/v1/oauth/[^/]+/redirect"
    method: "GET"
    method_regex: true
    rewrite: ""
    service: platform-auth:9222   
  creationTimestamp: null
  labels:
    io.kompose.service: platform-auth
  name: platform-auth
spec:
  ports:
  - name: "9222"
    port: 9222
    targetPort: 9222
  selector:
    io.kompose.service: platform-auth
status:
  loadBalancer: {}

---
# Source: backend/templates/platform-blob-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-blob-user-blobs
      prefix: "/v1/users/[^/]+/blobs"
      method: "GET|POST|DELETE"
      method_regex: true
      prefix_regex: true
      rewrite: ""
      service: platform-blob:9225
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-blob-blobs
      prefix: "/v1/blobs/[^/]+"
      method: "GET|DELETE"
      method_regex: true
      rewrite: ""
      service: platform-blob:9225
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-blob-blobs-content
      prefix: "/v1/blobs/[^/]+/content"
      method: "GET"
      method_regex: true
      rewrite: ""
      service: platform-blob:9225
  creationTimestamp: null
  labels:
    io.kompose.service: platform-blob
  name: platform-blob
spec:
  ports:
  - name: "9225"
    port: 9225
    targetPort: 9225
  selector:
    io.kompose.service: platform-blob
status:
  loadBalancer: {}

---
# Source: backend/templates/platform-data-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-dataservices
      prefix: /dataservices/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-data
      prefix: "/v1/data/"
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-user_data_sources
      prefix: "/v1/users/[^/]+/data_sources"
      method: "GET|POST|DELETE"
      method_regex: true
      prefix_regex: true
      rewrite: ""
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-user_data_sets
      prefix: "/v1/users/[^/]+/data_sets"
      method: "GET"
      method_regex: true
      prefix_regex: true
      rewrite: ""
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-user_datasets
      prefix: "/v1/users/[^/]+/datasets"
      method: "GET|POST"
      method_regex: true
      prefix_regex: true
      rewrite: ""
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-user_data
      prefix: "/v1/users/[^/]+/data"
      method: "DELETE"
      method_regex: true
      prefix_regex: true
      rewrite: ""
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-time
      prefix: "/v1/time"
      method: "GET"
      method_regex: true
      rewrite: ""
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-data_sources
      prefix: "/v1/data_sources/[^/]+"
      method: "GET|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-data_sets
      prefix: "/v1/data_sets"
      method: "GET"
      method_regex: true
      rewrite: ""
      service: platform-data:9220
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-data-datasets
      prefix: "/v1/datasets"
      method: "POST|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: platform-data:9220
  creationTimestamp: null
  labels:
    io.kompose.service: platform-data
  name: platform-data
spec:
  ports:
  - name: "9220"
    port: 9220
    targetPort: 9220
  selector:
    io.kompose.service: platform-data
status:
  loadBalancer: {}

---
# Source: backend/templates/platform-notification-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-notification
  name: platform-notification
spec:
  ports:
  - name: "9223"
    port: 9223
    targetPort: 9223
  selector:
    io.kompose.service: platform-notification
status:
  loadBalancer: {}

---
# Source: backend/templates/platform-task-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-task-tasks
      prefix: "/v1/tasks"
      method: "GET|POST"
      method_regex: true
      rewrite: ""
      service: platform-task:9224
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-task-tasks-id
      prefix: "/v1/tasks/[^/*]"
      method: "GET|PUT|DELETE"
      method_regex: true
      rewrite: ""
      service: platform-task:9224
  creationTimestamp: null
  labels:
    io.kompose.service: platform-task
  name: platform-task
spec:
  ports:
  - name: "9224"
    port: 9224
    targetPort: 9224
  selector:
    io.kompose.service: platform-task
status:
  loadBalancer: {}

---
# Source: backend/templates/platform-user-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-user-userservices
      prefix: /userservices/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: platform-user:9221
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  platform-user-users
      prefix: "/v1/users/[^/*]"
      method: "GET|DELETE"
      method_regex: true
      rewrite: ""
      service: platform-user:9221
  creationTimestamp: null
  labels:
    io.kompose.service: platform-user
  name: platform-user
spec:
  ports:
  - name: "9221"
    port: 9221
    targetPort: 9221
  selector:
    io.kompose.service: platform-user
status:
  loadBalancer: {}

---
# Source: backend/templates/seagull-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  seagull
      prefix: /metadata/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      rewrite: "/"
      path_redirect: "false"
      service: seagull:9120
  creationTimestamp: null
  labels:
    io.kompose.service: seagull
  name: seagull
spec:
  ports:
  - name: "9120"
    port: 9120
    targetPort: 9120
  selector:
    io.kompose.service: seagull
status:
  loadBalancer: {}

---
# Source: backend/templates/shoreline-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  shoreline-auth
      prefix: /auth/
      path_redirect: "false"
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      service: shoreline:9107
  creationTimestamp: null
  labels:
    io.kompose.service: shoreline
  name: shoreline
spec:
  ports:
  - name: "9107"
    port: 9107
    targetPort: 9107
  selector:
    io.kompose.service: shoreline
status:
  loadBalancer: {}

---
# Source: backend/templates/tide-whisperer-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name:  tide-whisperer-data
      prefix: /data/
      method: "GET|OPTIONS|POST|PUT|PATCH|DELETE"
      method_regex: true
      path_redirect: "false"
      rewrite: "/"
      service: tide-whisperer:9127
  creationTimestamp: null
  labels:
    io.kompose.service: tide-whisperer
  name: tide-whisperer
spec:
  ports:
  - name: "9127"
    port: 9127
    targetPort: 9127
  selector:
    io.kompose.service: tide-whisperer
status:
  loadBalancer: {}

---
# Source: backend/templates/blip-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: blip
  name: blip
spec:
  selector:
    matchLabels:
      io.kompose.service: blip
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: blip
    spec:
      containers:
      - env:
        - name: API_HOST
          value: http://a3548f01f2bfa11e99f1a024a6da1447-1766565264.us-west-2.elb.amazonaws.com:8009
        - name: DEV_TOOLS
          value: "true"
        - name: DISCOVERY_HOST
          value: 'hakken:8000'
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "3000"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SERVICE_NAME
          value: blip
        - name: WEBPACK_DEVTOOL
          value: cheap-module-eval-source-map
        image: "tidepool/blip:v1.14.1"
        imagePullPolicy: IfNotPresent
        name: blip
        command: ["/bin/sh"]
        args: ["-c", "yarn build && yarn server"]
        ports:
        - containerPort: 3000
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/export-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: export
  name: export
spec:
  selector:
    matchLabels:
      io.kompose.service: export
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: export
    spec:
      containers:
      - env:
        - name: API_HOST
          value: http://ambassador-api:8009
        - name: DEBUG_LEVEL
          value: debug
        - name: HTTP_PORT
          value: "9300"
        - name: SESSION_SECRET
          value: 'Sign the export service session with this secret'
        image: "tidepool/export:v1.3.2"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /export/status
            port: 9300
          initialDelaySeconds: 30
          periodSeconds: 10
        name: export
        ports:
        - containerPort: 9300
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/gatekeeper-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: gatekeeper
  name: gatekeeper
spec:
  selector:
    matchLabels:
      io.kompose.service: gatekeeper
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: gatekeeper
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv mongo 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: DISCOVERY_HOST
          value: 'hakken:8000'
        - name: GATEKEEPER_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongo:27017/gatekeeper?ssl=false
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9123"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVICE_NAME
          value: gatekeeper
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        image: "tidepool/gatekeeper:latest"
        imagePullPolicy: IfNotPresent
        livenessProbe:
           httpGet:
             path: /status
             port: 9123
           initialDelaySeconds: 3
           periodSeconds: 10
        name: gatekeeper
        ports:
        - containerPort: 9123
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/highwater-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: highwater
  name: highwater
spec:
  selector:
    matchLabels:
      io.kompose.service: highwater
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: highwater
    spec:
      containers:
      - env:
        - name: DISCOVERY_HOST
          value: 'hakken:8000'
        - name: METRICS_APIKEY
        - name: METRICS_UCSF_APIKEY
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9191"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SALT_DEPLOY
          value: 'gf78fSEI7tOQQP9xfXMO9HfRyMnW4Sx88Q'
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVICE_NAME
          value: highwater
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        image: "tidepool/highwater:latest"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: 9191
          initialDelaySeconds: 3
          periodSeconds: 10
        name: highwater
        ports:
        - containerPort: 9191
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/hydrophone-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: hydrophone
  name: hydrophone
spec:
  selector:
    matchLabels:
      io.kompose.service: hydrophone
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: hydrophone
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv mongo 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_HYDROPHONE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:9123"]}},
                "hakken": {
                  "host": "hakken:8000",
                  "skipHakken": true
                },
                "highwater": {
                    "metricsSource": "hydrophone",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://highwater:9191"]}
                },
                "seagull": {"serviceSpec": {"type": "static", "hosts": ["http://seagull:9120"]}},
                "shoreline": {
                    "name": "hydrophone",
                    "secret": "This needs to be the same secret everywhere. YaHut75NsK1f9UKUXuWqxNN0RUwHFBCy",
                    "serviceSpec": {"type": "static", "hosts": ["http://shoreline:9107"]},
                    "tokenRefreshInterval": "1h"
                }
            }
        - name: TIDEPOOL_HYDROPHONE_SERVICE
          value: |
            {
                "hydrophone": {
                    "assetUrl": "https://s3-us-west-2.amazonaws.com/tidepool-dev-asset",
                    "serverSecret": "This needs to be the same secret everywhere. YaHut75NsK1f9UKUXuWqxNN0RUwHFBCy",
                    "webUrl": "http://ambassador-api:3000"
                },
                "mongo": {
                    "connectionString": "mongodb://mongo:27017/confirm?ssl=false"
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:9157",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "hydrophone"
                },
                "sesEmail": {
                    "accessKey": "",
                    "fromAddress": "",
                    "secretKey": "",
                    "serverEndpoint": "https://email.us-west-2.amazonaws.com"
                }
            }
        image: "tidepool/hydrophone:latest"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: 9157
          initialDelaySeconds: 30
          periodSeconds: 10
        name: hydrophone
        ports:
        - containerPort: 9157
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/jellyfish-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: jellyfish
  name: jellyfish
spec:
  selector:
    matchLabels:
      io.kompose.service: jellyfish
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: jellyfish
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv mongo 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: DISCOVERY_HOST
          value: 'hakken:8000'
        - name: GATEKEEPER_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "gatekeeper:9123"}]}'
        - name: MINIMUM_UPLOADER_VERSION
          value: 0.251.0
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongo:27017/data?ssl=false
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9122"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SALT_DEPLOY
          value: 'itNkczadZ1EeC9fUWR3LnbKFagtYYLOk'
        - name: SCHEMA_VERSION
          value: "3"
        - name: SEAGULL_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "seagull:9120"}]}'
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVE_STATIC
          value: dist
        - name: SERVICE_NAME
          value: jellyfish
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        image: "tidepool/jellyfish:latest"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: 9122
          initialDelaySeconds: 3
          periodSeconds: 10
        name: jellyfish
        ports:
        - containerPort: 9122
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/mailhog-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    io.kompose.service: mailhog
  name: mailhog
spec:
  selector:
    matchLabels:
      io.kompose.service: mailhog
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mailhog
    spec:
      containers:
      - image: "mailhog/mailhog:latest"
        name: mailhog
        ports:
        - containerPort: 1025
        - containerPort: 8025
        resources: {}
        volumeMounts:
        - mountPath: /maildir
          name: mailhog
      restartPolicy: Always
      volumes:
      - name: 'mailhog'
        persistentVolumeClaim:
          claimName: mailhog
status: {}

---
# Source: backend/templates/message-api-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: message-api
  name: message-api
spec:
  selector:
    matchLabels:
      io.kompose.service: message-api
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: message-api
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv mongo 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: DISCOVERY_HOST
          value: 'hakken:8000'
        - name: GATEKEEPER_SERVICE
          value: '{
                  "type": "static", "hosts": [{"protocol": "http", "host": "gatekeeper:9123"}]}'
        - name: METRICS_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "highwater:9191"}]}'
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongo:27017/messages?ssl=false
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9119"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SEAGULL_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "seagull:9120"}]}'
        - name: SERVER_NAME
          value: message-api
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVICE_NAME
          value: message-api
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        - name: SKIP_HAKKEN
          value: "true"
        image: "tidepool/message-api:latest" 
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /status
            port: 9119
          initialDelaySeconds: 3
          periodSeconds: 10
        name: message-api
        ports:
        - containerPort: 9119
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/mongo-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  selector:
    matchLabels:
      io.kompose.service: mongo
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mongo
    spec:
      containers:
      - image: "mongo:3.2"
        name: mongo
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: mongo
      restartPolicy: Always
      volumes:
      - name: 'mongo'
        persistentVolumeClaim:
          claimName: mongo
status: {}

---
# Source: backend/templates/platform-auth-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-auth
  name: platform-auth
spec:
  selector:
    matchLabels:
      io.kompose.service: platform-auth
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: platform-auth
    spec:
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://platform-auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: 'ambassador-api'
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the auth service'
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://platform-blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the blob service'
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 'file'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the data service'
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://platform-notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the notification service'
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: http://ambassador-api:8009/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          value: 'Encryption salt to generate state parameter during OAuth workflow'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'mongo:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_TLS
          value: 'false'
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://platform-task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the task service'
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_USER_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the user service'
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ'
        image: "tidepool/platform-auth:1.30.1"
        livenessProbe:
          httpGet:
            path: /status
            port: 9222
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 9222
          initialDelaySeconds: 5
          periodSeconds: 10
        name: platform-auth
        ports:
        - containerPort: 9222
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/platform-blob-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-blob
  name: platform-blob
spec:
  selector:
    matchLabels:
      io.kompose.service: platform-blob
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: platform-blob
    spec:
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://platform-auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: 'ambassador-api'
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the auth service'
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://platform-blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the blob service'
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 'file'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the data service'
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://platform-notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the notification service'
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: http://ambassador-api:8009/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          value: 'Encryption salt to generate state parameter during OAuth workflow'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'mongo:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_TLS
          value: 'false'
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://platform-task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the task service'
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_USER_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the user service'
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ'
        image: "tidepool/platform-blob:1.30.1"
        livenessProbe:
          httpGet:
            path: /status
            port: 9225
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 9225
          initialDelaySeconds: 5
          periodSeconds: 10
        name: platform-blob
        ports:
        - containerPort: 9225
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/platform-data-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-data
  name: platform-data
spec:
  selector:
    matchLabels:
      io.kompose.service: platform-data
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: platform-data
    spec:
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://platform-auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: 'ambassador-api'
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the auth service'
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://platform-blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the blob service'
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 'file'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the data service'
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://platform-notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the notification service'
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: http://ambassador-api:8009/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          value: 'Encryption salt to generate state parameter during OAuth workflow'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'mongo:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_TLS
          value: 'false'
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://platform-task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the task service'
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_USER_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the user service'
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ'
        image: "tidepool/platform-data:1.30.1"
        livenessProbe:
          httpGet:
            path: /status
            port: 9220
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 9220
          initialDelaySeconds: 5
          periodSeconds: 10
        name: platform-data
        ports:
        - containerPort: 9220
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/platform-migrations-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-migrations
  name: platform-migrations
spec:
  selector:
    matchLabels:
      io.kompose.service: platform-migrations
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: platform-migrations
    spec:
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://platform-auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: 'ambassador-api'
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the auth service'
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://platform-blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the blob service'
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 'file'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the data service'
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://platform-notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the notification service'
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: http://ambassador-api:8009/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          value: 'Encryption salt to generate state parameter during OAuth workflow'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'mongo:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_TLS
          value: 'false'
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://platform-task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the task service'
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_USER_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the user service'
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ'
        image: "tidepool/platform-migrations:1.30.1"
        name: platform-migrations
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/platform-notification-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-notification
  name: platform-notification
spec:
  selector:
    matchLabels:
      io.kompose.service: platform-notification
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: platform-notification
    spec:
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://platform-auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: 'ambassador-api'
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the auth service'
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://platform-blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the blob service'
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 'file'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the data service'
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://platform-notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the notification service'
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: http://ambassador-api:8009/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          value: 'Encryption salt to generate state parameter during OAuth workflow'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'mongo:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_TLS
          value: 'false'
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://platform-task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the task service'
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_USER_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the user service'
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ'
        image: "tidepool/platform-notification:1.30.1"
        livenessProbe:
          httpGet:
            path: /status
            port: 9223
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 9223
          initialDelaySeconds: 5
          periodSeconds: 10
        name: platform-notification
        ports:
        - containerPort: 9223
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/platform-task-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-task
  name: platform-task
spec:
  selector:
    matchLabels:
      io.kompose.service: platform-task
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: platform-task
    spec:
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://platform-auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: 'ambassador-api'
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the auth service'
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://platform-blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the blob service'
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 'file'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the data service'
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://platform-notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the notification service'
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: http://ambassador-api:8009/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          value: 'Encryption salt to generate state parameter during OAuth workflow'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'mongo:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_TLS
          value: 'false'
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://platform-task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the task service'
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_USER_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the user service'
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ'
        image: "tidepool/platform-task:1.30.1"
        livenessProbe:
          httpGet:
            path: /status
            port: 9224
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 9224
          initialDelaySeconds: 5
          periodSeconds: 10
        name: platform-task
        ports:
        - containerPort: 9224
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/platform-tools-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-tools
  name: platform-tools
spec:
  selector:
    matchLabels:
      io.kompose.service: platform-tools
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: platform-tools
    spec:
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://platform-auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: 'ambassador-api'
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the auth service'
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://platform-blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the blob service'
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 'file'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the data service'
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://platform-notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the notification service'
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: http://ambassador-api:8009/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          value: 'Encryption salt to generate state parameter during OAuth workflow'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'mongo:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_TLS
          value: 'false'
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://platform-task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the task service'
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_USER_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the user service'
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ'
        image: "tidepool/platform-tools:1.30.1"
        name: platform-tools
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/platform-user-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: platform-user
  name: platform-user
spec:
  selector:
    matchLabels:
      io.kompose.service: platform-user
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: platform-user
    spec:
      containers:
      - env:
        - name: TIDEPOOL_AUTH_CLIENT_ADDRESS
          value: http://platform-auth:9222
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_AUTH_CLIENT_EXTERNAL_SERVER_SESSION_TOKEN_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_AUTH_SERVICE_DOMAIN
          value: 'ambassador-api'
        - name: TIDEPOOL_AUTH_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the auth service'
        - name: TIDEPOOL_AUTH_SERVICE_SERVER_ADDRESS
          value: :9222
        - name: TIDEPOOL_BLOB_CLIENT_ADDRESS
          value: http://platform-blob:9225
        - name: TIDEPOOL_BLOB_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the blob service'
        - name: TIDEPOOL_BLOB_SERVICE_SERVER_ADDRESS
          value: :9225
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_FILE_DIRECTORY
          value: '_data/blobs'
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_BUCKET
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_S3_PREFIX
          value: ''
        - name: TIDEPOOL_BLOB_SERVICE_UNSTRUCTURED_STORE_TYPE
          value: 'file'
        - name: TIDEPOOL_CONFIRMATION_STORE_DATABASE
          value: confirm
        - name: TIDEPOOL_DATA_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DATA_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the data service'
        - name: TIDEPOOL_DATA_SERVICE_SERVER_ADDRESS
          value: :9220
        - name: TIDEPOOL_DATA_SOURCE_CLIENT_ADDRESS
          value: http://platform-data:9220
        - name: TIDEPOOL_DEPRECATED_DATA_STORE_DATABASE
          value: data
        - name: TIDEPOOL_DEXCOM_CLIENT_ADDRESS
          value: 'https://api.dexcom.com'
        - name: TIDEPOOL_ENV
          value: local
        - name: TIDEPOOL_LOGGER_LEVEL
          value: debug
        - name: TIDEPOOL_MESSAGE_STORE_DATABASE
          value: messages
        - name: TIDEPOOL_METRIC_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_NOTIFICATION_CLIENT_ADDRESS
          value: http://platform-notification:9223
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the notification service'
        - name: TIDEPOOL_NOTIFICATION_SERVICE_SERVER_ADDRESS
          value: :9223
        - name: TIDEPOOL_PERMISSION_CLIENT_ADDRESS
          value: http://gatekeeper:9123
        - name: TIDEPOOL_PERMISSION_STORE_DATABASE
          value: gatekeeper
        - name: TIDEPOOL_PERMISSION_STORE_SECRET
          value: 'This secret is used to encrypt the groupId stored in the DB for gatekeeper'
        - name: TIDEPOOL_PROFILE_STORE_DATABASE
          value: seagull
        - name: TIDEPOOL_SERVER_TLS
          value: "false"
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_AUTHORIZE_URL
          value: 'https://api.dexcom.com/v1/oauth2/login'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_ID
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_CLIENT_SECRET
          value: ''
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_REDIRECT_URL
          value: http://ambassador-api:8009/v1/oauth/dexcom/redirect
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_SCOPES
          value: offline_access
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_STATE_SALT
          value: 'Encryption salt to generate state parameter during OAuth workflow'
        - name: TIDEPOOL_SERVICE_PROVIDER_DEXCOM_TOKEN_URL
          value: 'https://api.dexcom.com/v1/oauth2/token'
        - name: TIDEPOOL_SESSION_STORE_DATABASE
          value: user
        - name: TIDEPOOL_STORE_ADDRESSES
          value: 'mongo:27017'
        - name: TIDEPOOL_STORE_DATABASE
          value: tidepool
        - name: TIDEPOOL_STORE_TLS
          value: 'false'
        - name: TIDEPOOL_SYNC_TASK_STORE_DATABASE
          value: data
        - name: TIDEPOOL_TASK_CLIENT_ADDRESS
          value: http://platform-task:9224
        - name: TIDEPOOL_TASK_QUEUE_DELAY
          value: "5"
        - name: TIDEPOOL_TASK_QUEUE_WORKERS
          value: "5"
        - name: TIDEPOOL_TASK_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the task service'
        - name: TIDEPOOL_TASK_SERVICE_SERVER_ADDRESS
          value: :9224
        - name: TIDEPOOL_USER_CLIENT_ADDRESS
          value: http://ambassador-api:8009
        - name: TIDEPOOL_USER_SERVICE_SECRET
          value: 'Service secret used for interservice requests with the user service'
        - name: TIDEPOOL_USER_SERVICE_SERVER_ADDRESS
          value: :9221
        - name: TIDEPOOL_USER_STORE_DATABASE
          value: user
        - name: TIDEPOOL_USER_STORE_PASSWORD_SALT
          value: 'ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ'
        image: "tidepool/platform-user:1.30.1"
        livenessProbe:
          httpGet:
            path: /status
            port: 9221
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /status
            port: 9221
          initialDelaySeconds: 5
          periodSeconds: 10
        name: platform-user
        ports:
        - containerPort: 9221
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/seagull-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: seagull
  name: seagull
spec:
  selector:
    matchLabels:
      io.kompose.service: seagull
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: seagull
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv mongo 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: DISCOVERY_HOST
          value: 'hakken:8000'
        - name: GATEKEEPER_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "gatekeeper:9123"}]}'
        - name: METRICS_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "highwater:9191"}]}'
        - name: MONGO_CONNECTION_STRING
          value: mongodb://mongo:27017/seagull?ssl=false
        - name: NODE_ENV
          value: 'production'
        - name: PORT
          value: "9120"
        - name: PUBLISH_HOST
          value: 'hakken'
        - name: SALT_DEPLOY
          value: 'KEWRWBe5yyMnW4SxosfZ2EkbZHkyqJ5f'
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: SERVICE_NAME
          value: seagull
        - name: USER_API_SERVICE
          value: '{"type": "static", "hosts": [{"protocol": "http", "host": "shoreline:9107"}]}'
        - name: SKIP_HAKKEN
          value: "true"
        image: "tidepool/seagull:v0.7.1"
        livenessProbe:
          httpGet:
            path: /status
            port: 9120
          initialDelaySeconds: 30
          periodSeconds: 10
        name: seagull
        ports:
        - containerPort: 9120
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/shoreline-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: shoreline
  name: shoreline
spec:
  selector:
    matchLabels:
      io.kompose.service: shoreline
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: shoreline
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv mongo 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_SHORELINE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:9123"]}},
                "hakken": {
                  "host": "hakken:8000",
                  "skipHakken": true
                },
                "highwater": {
                    "metricsSource": "shoreline",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://highwater:9191"]}
                }
            }
        - name: TIDEPOOL_SHORELINE_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": "mongodb://mongo:27017/user?ssl=false"
                },
                "oauth2": {
                    "expireDays": 14
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:9107",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "shoreline"
                },
                "user": {
                    "apiSecret": "This is a local API secret for everyone. BsscSHqSHiwrBMJsEGqbvXiuIUPAjQXU",
                    "clinicDemoUserId": "",
                    "longTermDaysDuration": 30,
                    "longTermKey": "abcdefghijklmnopqrstuvwxyz",
                    "salt": "ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ",
                    "serverSecret": "This needs to be the same secret everywhere. YaHut75NsK1f9UKUXuWqxNN0RUwHFBCy",
                    "tokenDurationSecs": 2592000,
                    "verificationSecret": "+skip"
                }
            }
        image: "tidepool/shoreline:v0.14.1"
        livenessProbe:
          httpGet:
            path: /status
            port: 9107
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shoreline
        ports:
        - containerPort: 9107
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/tide-whisperer-deployment.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: tide-whisperer
  name: tide-whisperer
spec:
  selector:
    matchLabels:
      io.kompose.service: tide-whisperer
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: tide-whisperer
    spec:
      initContainers:
      - name: init-mongo
        image: busybox
        command: ['sh', '-c', 'until nc -zvv mongo 27017; do echo waiting for mongo; sleep 2; done;']
      containers:
      - env:
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: TIDEPOOL_TIDE_WHISPERER_ENV
          value: |
            {
                "auth": {
                  "address": "http://platform-auth:9222",
                  "serviceSecret": "Service secret used for interservice requests with the auth service",
                  "userAgent": "Tidepool-TideWhisperer"
                },
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://gatekeeper:9123"]}},
                "hakken": {
                  "host": "hakken:8000",
                  "skipHakken": true
                  },
                "seagull": {"serviceSpec": {"type": "static", "hosts": ["http://seagull:9120"]}},
                "shoreline": {
                    "name": "tide-whisperer",
                    "secret": "This needs to be the same secret everywhere. YaHut75NsK1f9UKUXuWqxNN0RUwHFBCy",
                    "serviceSpec": {"type": "static", "hosts": ["http://shoreline:9107"]},
                    "tokenRefreshInterval": "1h"
                }
            }
        - name: TIDEPOOL_TIDE_WHISPERER_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": "mongodb://mongo:27017/data?ssl=false"
                },
                "schemaVersion": {
                    "maximum": 99,
                    "minimum": 1
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:9127",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "tide-whisperer"
                }
            }
        image: "tidepool/tide-whisperer:latest"
        livenessProbe:
          httpGet:
            path: /status
            port: 9127
          initialDelaySeconds: 30
          periodSeconds: 10
        name: tide-whisperer
        ports:
        - containerPort: 9127
        resources: {}
      restartPolicy: Always
status: {}

---
# Source: backend/templates/frontend-secret.yaml
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: frontend
  annotations:
    aws-load-balancer-ssl-cert: "arn:aws:iam::118346523422:server-certificate/wildcard.tidepool.org-2020-11-15-digicert"
spec:
  encryptedData:
    cert.pem: AgCpV0qo5C6o5F+En+5CtoRRTDNKEUCO1QxJPhZOgaqCUKyb/DDSALj5AzE6w53exmd9T649xpgmuGwcnOb0f7wL6TT3g4SNJnCsO04WS37GGIFZ1q8JxUJqwlopcgyKg4E1fhTbD8/t6oprokxwQkHXN9jJO31/Fe6TrisMD2m3QuhBaENmVFwFMunEXjQhxm1DzCWQkMGAJmMc1ENjNICdllJpXzFWvo/YpbPMrX2q2EbrtRho70ENr86lL7BL/ut1PKuOBfcBWjRh1qYFafMMjd4ymtgSN0YxYRzZ5i/E1iZ5Blp36MwQwzGsUR7TzZwXQm/gp06dK2mj6nrEmM5+3DqVruzT4YunZqrA6hi2V5GyAXvwh7SIr2eShPB7WdPUgEiOhMvsZLZVrl2o07EDL2YpgOQaYX9kLYzArH4qTgS8cJxrVfdCd9Lt90fzJupvmkqb3YHhPsj4kZ4g6+4V9XGZ989MKBTOw+pkyJFjuVGGq5YpZXoklWIPyV+n0+HMDF8HuCEFUWjDWAO3EGpe2fn2oqIzUCXIgoHRyo2GnlAXIBiq6s3dyP7PmGojDtG3dXOdUAPEsI1YJelpxilmUUgN8H8nSDVTcX/L5DhAWzEMdmt7tDmP3gfyZDbBqtkxCzAl2za7hEVlV3iDjb0IwBxxZoTOvhb58esYGZqJyhk2bKP6sr7OQgteYVKSJVulguSUKMKNaz/cf+B4xTTmequ3dZ7DcTjDGqtQ3n/rF5vpwpbsWNf/g+EPg2jcB69W0mDBchE9JYzM0/lcwiFHsXlgJ24qA+SLDiGc6PtCGqvvOTw1xdVu6bZ5w5KuWMmOvr+k9kyEvWyBqJ7PiaQ137ht50PaOt5FJn58GUUqHtM7BFL0OkUM4w7xWJCr0RU/iX4lo+9B5D5y04jLY0dp68lIPex2ldbnlDCinz4sbE8VotRgEQoqkPmpAYTNQZEna71wMhwBjTW+9MlBeNUSLsklsDOuIPouuj79SQrUtLHD9OIcldUR5WmA/rBkDE1oLBRfaA0PrQ/H1jIiZ+mu6fZFUEejt+LSo0FV+CM1aFnDdtBiHGRn6TgmfLVX31ermfW19bM5PN34A8knc4IXroOmRxy132t/gJLk+vXx+DMcOFnhKRP3HUXiKiyqrsxElFrnTUkI7RAcc6k2/A1pgbsMvpgL0E3k21WeJ2kSHmtJrHSzr0Qv7qufmJ+9GylQO/1egZb2FPA3DY3Cnd9/dgPpm+F82RrNswtpujF885sLh89OM9L8YT+hG8SmEn7uBCrAbcqm0rvrlQtKJC4fNc5ljX//NrdYbybxxhTNDvNH7TnK3RFs1VwrtUyVy/riY3oi/fRnkT9TXKmeZyFNWGr2uoNpnM8ZewxtrZjJpEUc/769gZQxLk+kWZdD/HTUBSLWhnkkqaeQ97X07PtadrYZJ0O82e5AlRJv6DuAWlcZ6XGPVGq7RXUnb4q9JT5eJdjIkv1U0KXQP8hOZQ/W0XEtXcUNjxROgFaN3QghxeD8ZSciXryHCl288nGce9NSmsKnK3I7l9CkHiU/zOE0mTPKLAYLvkOAY4Em2YDzfqsIjGKYujtMQNaWZLGh/iv3BSLfCkNzHhX6tRgRse6GrLr+XuM3l/2znu5TeMNW2B7tWtMx1F8HHzlNblBKPWbazbh8F5Ohs9oqhoM7PPPPEt5QcxLkE6E+hKvCMtljOOOppqjBTg==
    key.pem: AgCIs67o0Xrr3/E+y0rBjcf/RsHN9aM7zmcKRRXOGR109BpBuUbusSvMt9G5QoQgS9O4btrnH9o1nAset9jdmmaipFknozBvwX2Z4MX9YCzp8LpYoXLd5MNJg5klOUjB04oYaJYhPpkx/ioK126PzWMPC5sgVuJeVUhuUAn9222eCGPgzjpQTaq6UX2ajzeUT99VhBCZerCuTiraC2i71LdVLDqFSkx4QFaxIu6Fna5aiMl7TNx0Lm5wQ6ObEuDy6mcI3WoDbUcwrbcboZPlGQ9ElEk2ZyGb3P0igaGoQdbSBnW6WLN6vhU3JoIPNO9El2HPyy+N/mWbs/NT3+iNCYmVVhsqGo8k83GSTRA4fn58FSvwSBfZvLAOI4527bsttEVyk56a7wtqvOunRkUp4WECbdCrgXaycfkcaxDmFCWrUXY6Ppp3tUQec5jUxWGcCw6TaAtoMXAsYEKUaM412L4dZkOD5gYjaFxGRBSpI3iZfVDP2euIknz22vTJJD9pDQKu9URRsVIAtH5di07CBz77ghre6Y03/HUbFcDO4IcmP/JdhVRxH8+sHUPR2nrnZzmNiRRtvnHqkR0UMZmXhzpT98pNWVzI5rtJ2r8jdv8fdmUXP2N0SfUX/ETFz8bw6S7JRxTDEaR1zkX3WthQSmBh34Ar3wNvbEVsmYLFGjHL4uHdlAogOAcilgkzEh199cNd9ZfDOx0HkaJyWgpHGzok0teEjwVooMYri/RyYPWlXbq3MmEGyq5B/KO4ip1Jat4svKirQxvlr3jGf88lmRkG9nfYN11gaT2mjeVuZFio7mwBmagajRlGGWBYfYxRdMT0A8BQMCKvcPgiKgn8LZzfYKIubvQWX2CFAAmEVwGx/CTOLA25nisOVpStdOEyqWGrjn83jZgPnWE+Bj4rLwDkUB9lYoTfc6HBa03EUOzBhm1EFV5NaFZWKiyNsRK1BHsXY58wFQ/QbFVmiSeBRvUbG/1m1XTdJ8Jgl5+ZEA3WeKqRmpmXPc4lCkAORDy9JsOznNjD4h1G1Y0t4pWoo2EkswoOZYCpdkCfGPPNZ6bsHmYunlRce5uT0PkZjmeQWLF17bJAUYKUgUGUjvJf0SkpXnOt6U3dFV962FiIL/4su/DODt8OcysM1zRbBApngDjl9GPJ37/NECMCEww+dUYP7myfwwLZY6mA5yZ2NihTkYhOVeekmr1zEZNRBnbWfyzFBGB1tf3fCwD5IP1RswNUMbkUCzZgyq3AH1nsd1fvmP/ZsCMAvS2SAGmZ+Wtf08yKeFV6PXhEXCks7uLbXxk2HoAnmrLM6MPovXceM+R9S8piZnejug8ebhyZmGkH0zay6AN7UEmK2OE6sj4R2FAp5VDPZOy/WKzoyEaZyb8KT5J8dC2O+ls+rrgezDB8UOq3L/CNhc0xkVqdoksji/Kpq4jw4fwU7Fp1GwmRQ7/OHq62eeaJmy4kbxTQqGJQSjalNMOPseWUfAL+B6KFH83o0vPotyB9rQE1RJ+cx+h3sNU4KhKarqf7f6bDUn0LRPs+/YhmMWIgSHY3ar7L7/67zRohUFzKkaaBZ0ScDUP3CUeZDixxuXxsYcodNnFLlKowjedVxjq+E/FyVCiW48cpakIoeID1iGnOLY4v9RZH5tgdjJ9TEQ3j58Czs1jAluZ19RjvimPjq8iMc8UHIv0EPn7Oh5Oajwz/Xx2x+TabMqny7Q3iCqztvhf07zcey+Nr4i2JxZ8RoNFf+clE9cIsWsrTt1KjDPqPkJggtYUh+j8MgBQpMPUVS+n6IZfExJ4FlgSO0BiFtR8uey3CBt0NP3tCkpOrx11zo7RDeKkEtJtyOQgRMIPvNRDCGmfpoNH5e7dzyLbhHAh/6yMSAjSPCj0RzLnX/oeo7E1F
---

#!/bin/bash 
#
# Install/upgrade Weave Flux to watch the current branch of the CONFIG repo
#
# Usage: install_flux 
#
# Current Kubectl context must point to cluster that you want to update.

export PATH=/bin:/usr/bin:/usr/local/bin

if [ -z "$CONFIG_DIR" ]
then
	echo "\$CONFIG_DIR required."
	exit
fi

if [ -z "$CLUSTER_NAME" ]
then
	echo "\$CLUSTER_NAME required."
	exit
fi

if [ -z "$FLUX_DIR" ]
then
	echo "\$FLUX_DIR required."
	exit
fi

if [ -z "$FLUX_BRANCH" ]
then
	echo "\$FLUX_BRANCH required."
	exit
fi

if [ -z "$CLUSTER_DIR" ]
then
	echo "\$CLUSTER_DIR required."
	exit
fi

if [ -n "${FLUXCLOUD}" ]
then
  INSTALL_FLUXCLOUD=--set\ additionalArgs=\'{--connect=ws://${FLUXCLOUD}}\'
else
  INSTALL_FLUXCLOUD=
fi

CRDS_UNINSTALLED=$(kubectl get crds helmreleases.flux.weave.works >/dev/null; echo $?)
if [ ${CRDS_UNINSTALLED} -eq 0 ]
then
    INSTALL_CRDS=false
else
    INSTALL_CRDS=true
fi

if [ ! -d "$CLUSTER_DIR" ]
then
   echo "Warning: Cannot find directory for flux to watch at $CLUSTER_DIR"
fi

# Pull the remote url and the branch from Git if not provided
cd $CONFIG_DIR
SOURCE_SECRET=${CLUSTER_DIR}/flux-secret.yaml
if [ -f $SOURCE_SECRET ]
then

    GIT_SECRET_NAME=$(basename $SOURCE_SECRET | sed -e s/\.yaml$//)

    if [ "$GIT_SECRET_NAME" != "flux-git-deploy" ]
    then
	    echo "applying secret for flux identity at ${SOURCE_SECRET}"
	    kubectl apply -f ${SOURCE_SECRET}
	    SECRETARG="--set git.secretName=${GIT_SECRET_NAME}"
    else
	    SECRETARG=""
    fi
else 
    GIT_SECRET_NAME="flux-git-deploy"
fi

cd /tmp
rm -rf flux
git clone https://github.com/weaveworks/flux/
cd flux

read -p "Install Flux: install_crds=${INSTALL_CRDS} branch=${FLUX_BRANCH} path=${FLUX_DIR} repo=${GIT_REMOTE} cluster=${CLUSTER_NAME} ${SECRETARG}? (y|N)  " -n 1 -r
if [[ $REPLY =~ ^[Yy]$ ]]
then 
    set -x
    helm delete flux --purge
    helm upgrade \
    --install \
      --set rbac.create=true \
      --set helmOperator.create=true \
      --set helmOperator.chartsSyncInterval=1m \
      --set helmOperator.replicaCount=1 \
      --set helmOperator.updateChartDeps=true \
      --set helmOperator.createCRD=${INSTALL_CRDS} \
      --set helmOperator.configureRepositories.enable=true \
      --set syncGarbageCollection.enabled=true \
      --set git.url=${GIT_REMOTE} \
      --set git.path=${FLUX_DIR} \
      --set git.branch=${FLUX_BRANCH} \
      --set git.label=${CLUSTER_NAME} \
      ${SECRETARG} \
      --set git.pollInterval=1m \
      --set git.timeoout=40s \
      --namespace flux \
      --reuse-values \
      ${INSTALL_FLUXCLOUD} \
      flux \
      chart/flux
else
	echo "No action taken."
fi

#!/bin/bash 
#
# Create EKS cluster and install flux
#
# Requires config.yaml file in REMOTE_REPO.
#
# Depends on eksctl, git, mktemp
#
# Usage: $0 ${REMOTE_REPO}

red=`tput setaf 1`
green=`tput setaf 2`
magenta=`tput setaf 5`
reset=`tput sgr0`

REMOTE_REPO=${1:-$REMOTE_REPO}

if [ -z "$REMOTE_REPO" ]
then
        echo "${red}[x] must provide REMOTE_REPO${reset}"
        exit 1
fi

if [[ $REMOTE_REPO = git@github.com* ]]
then
        remote=$REMOTE_REPO
else
        remote="git@github.com:tidepool-org/$REMOTE_REPO"
fi

if [ -z "$GITHUB_TOKEN" ]
then
        echo "${red}[x] \$GITHUB_TOKEN required.${reset}"
        exit
fi

remotebase=$(basename $remote)

# create temporary workspace to clone Git repos into
mytmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
trap "rm -rf $mytmpdir" EXIT
cd $mytmpdir

# clone config repo
git clone $remote
cd $remotebase
CONFIG_DIR=$(realpath .)

CLUSTER_NAME=$(yq r $CONFIG_DIR/values.yaml cluster.metadata.name)
IAM_USERS=$(yq r $CONFIG_DIR/values.yaml aws.iamUsers | sed -e "s/- //")
AWS_ACCOUNT=$(yq r $CONFIG_DIR/values.yaml aws.accountNumber | sed -e "s/- //")
GROUP=system:masters

echo "${magenta}[√] adding system masters${reset}"
for user in ${IAM_USERS}
do
    arn=arn:aws:iam::${AWS_ACCOUNT}:user/${user}
    eksctl create iamidentitymapping --region=${AWS_REGION}  --role=$arn --group=$GROUP --name=${CLUSTER_NAME} --username=$user
    while [ $? -ne 0 ]
    do
	    sleep 3
    	    eksctl create iamidentitymapping --region=${AWS_REGION}  --role=$arn --group=$GROUP --name=${CLUSTER_NAME} --username=$user
    done
    echo "${magenta}[√] added $user${reset}"
done

rm -rf $mytmpdir


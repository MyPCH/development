#!/bin/bash -xv
INFO=${1:-values.yaml}
export CONFIG_REPO=${2:-$(pwd)}
export CLUSTER_NAME=$(yq read $INFO global.cluster.name)
export CONFIG_REPO_NAME=${3:-cluster-${CLUSTER_NAME}}

export AWS_REGION=$(yq read $INFO global.cluster.region)
export USERS=$(yq read values.yaml global.users | sed -e "s/^- //" | paste -sd " " -)
export ENVIRONMENTS=$(yq r values.yaml env | grep -v ' .*' | sed 's/.$//' | | paste -sd " " -)
export GITHUB_ACCOUNT=$(yq read $INFO global.github.account)
export FLUXCLOUD=$(yq read $INFO global.fluxcloud.enabled)
export GITHUB_ACCESS_TOKEN=$(yq read $INFO global.github.token)

mytmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
cd $mytmpdir
git clone git@github.com:tidepool-org/development.git
git checkout k8s
export DEV_REPO=$(pwd)/development
export PATH=$PATH:${DEV_REPO}/bin

brew bundle --file=${DEV_REPO}/Brewfile
pip3 install boto3 --user

mkdir -p $CONFIG_REPO/clusters/${CLUSTER_NAME}
cd ${CONFIG_REPO}/clusters/${CLUSTER_NAME}

CHARTDIR=${DEV_REPO}/charts/all
external_secret <(helm template ${CHARTDIR} -x ${CHARTDIR}/secrets.yaml) create ${CLUSTER_NAME} encoded >${CONFIG_REPO}/flux/external-secrets.yaml

helm template ${CHARTDIR} -x ${CHARTDIR}/shared-helmrelease.yaml >shared-helmrelease.yaml
helm template ${CHARTDIR} -x ${CHARTDIR}/shared-start-helmrelease.yaml >shared-start-helmrelease.yaml


for ENVIRONMENT in ${ENVIRONMENTS}
do
  aws s3 mb s3://tidepool-${ENVIRONMENT}-asset
  aws s3 cp s3://tidepool-dev-asset s3://tidepool-${ENVIRONMENT}-asset
  mkdir $ENVIRONMENT

  helm template ${CHARTDIR} -x ${CHARTDIR}/namespace.yaml > $ENVIRONMENT/namespace.yaml
  helm template ${CHARTDIR} -x ${CHARTDIR}/shoreline-configmap.yaml > $ENVIRONMENT/shoreline-configmap.yaml
  helm template ${CHARTDIR} -x ${CHARTDIR}/tidepool-helmrelease.yaml > $ENVIRONMENT/tidepool-helmrelease.yaml
done

helm template ${CHARTDIR} -x ${CHARTDIR}/config.yaml > config.yaml

git commit -am "Initial configuration"
git remote add origin git@github.com:${GITHIB_ACCOUNT}/${CONFIG_REPO_NAME}.git
git push

create_cluster
sleep 600
export KUBECONFIG=$(realpath ./kubeconfig.yaml)
authorize_users "${USERS}"
install_tiller
kubectl apply -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.8/deploy/manifests/00-crds.yaml

# create IAM roles
cluster_roles
for ENVIRONMENT in ${ENVIRONMENTS}
do
  ENVIRONMENT=${ENVIRONMENT} env_roles
export

helm install --name flux-repositories --namespace flux ${DEV_REPO}/charts/flux-repositories
install_flux $FLUXCLOUD
push_deploy_key $GITHUB_ACCESS_TOKEN


#!/bin/bash
#
# Install secrets into cluster
#
# Usage: $0 ${REMOTE_REPO}


red=`tput setaf 1`
green=`tput setaf 2`
magenta=`tput setaf 5`
reset=`tput sgr0`

REMOTE_REPO=${1:-$REMOTE_REPO}

if [ -z "$REMOTE_REPO" ]
then
        echo "${red}[x] must provide REMOTE_REPO${reset}"
        exit 1
fi

if [[ $REMOTE_REPO = git@github.com* ]]
then
        remote=$REMOTE_REPO
else
        remote="git@github.com:tidepool-org/$REMOTE_REPO"
fi

if [ -z "$GITHUB_TOKEN" ]
then
        echo "${red}[x] \$GITHUB_TOKEN required.${reset}"
        exit 1
fi

remotebase=$(basename $remote)

# create temporary workspace to clone Git repos into
mytmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
trap "rm -rf $mytmpdir" EXIT
cd $mytmpdir

git clone git@github.com:/tidepool-org/secret-map
SM_DIR=$(realpath ./secret-map)

git clone git@github.com:/tidepool-org/development
(cd development; git checkout k8s)
DEV_DIR=$(realpath development)
CHART_DIR=$DEV_DIR/charts/tidepool/0.1.7

# clone config repo
git clone $remote
cd $remotebase
CONFIG_DIR=$(realpath .)

# extract values to use for templating
export ClusterName=$(yq r values.yaml cluster.metadata.name)

echo "${magenta}[√] creating secrets for cluster $ClusterName in repo $remote${reset}"


environments=$(yq r values.yaml environments | sed -e "/^  .*/d" -e s/:.*//)
for env in $environments
do
	secretsSource=$(yq r values.yaml environments.${env}.secretsSource)
	echo "${magenta}[i] migrating ${secretsSource}${reset}"
	if [ "$secretsSource" == "dev" -o "$secretsSource" == "stg" -o "$secretsSource" == "int" -o "$secretsSource" == "prd" ]
	then
		echo $"external-secrets/migrated-external-secrets.yaml"
		mkdir -p environments/$env/external-secrets
		$SM_DIR/bin/migrate_secrets $secretsSource $ClusterName $env | separate_files
	fi
done

echo "${magenta}[√] committing changes${reset}"
# commit changes to repo
cd $CONFIG_DIR
git add .
git commit -m "Added tidepool environments"
git push

echo "${magenta}[√] done${reset}"

# clean up
rm -rf $mytmpdir


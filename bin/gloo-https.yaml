# Auto-generated file by gloo-gateway. Do not edit.
{{ if and (eq .Values.gateway.name "gloo") (.Values.https.enabled) }}
--- #file: gloo-api-external-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: '{{.Release.Namespace}}-api-external'
  namespace: '{{- .Release.Namespace -}}'
spec:
  displayName: '{{.Release.Namespace}}-api.tidepool.org'
  sslConfig:
    secretRef:
      name: tidepool-org
      namespace: default
    sniDomains:
    - '{{.Release.Namespace}}-api.tidepool.org'
  virtualHost:
    corsPolicy:
      allowCredentials: true
      allowHeaders:
      - authorization
      - content-type
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      allowMethods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
      allowOriginRegex:
      - '*'
      exposeHeaders:
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      maxAge: 600s
    domains:
    - '{{.Release.Namespace}}-api.tidepool.org'
    name: '{{.Release.Namespace}}-api.tidepool.org'
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-image-9226'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-blob-{{.Values.platformBlob.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-image-9226'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-blob-{{.Values.platformBlob.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-blob-{{.Values.platformBlob.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-task-{{.Values.platformTask.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-user-{{.Values.platformUser.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-user-{{.Values.platformUser.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-image-9226'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-seagull-{{.Values.seagull.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-highwater-{{.Values.highwater.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-hydrophone-{{.Values.hydrophone.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-message-api-{{.Values.message.api.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-task-{{.Values.platformTask.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-export-{{.Values.tide.export.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-gatekeeper-{{.Values.gatekeeper.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-shoreline-{{.Values.shoreline.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-tide-whisperer-{{.Values.tide.whisperer.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
--- #file: gloo-api-internal-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: '{{.Release.Namespace}}-api-internal'
  namespace: '{{.Release.Namespace}}'
spec:
  externalName: gateway-proxy.gloo-system.svc.cluster.local
  ports:
  - port: 80
  type: ExternalName
--- #file: gloo-api-internal-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: '{{.Release.Namespace}}-api-internal'
  namespace: '{{- .Release.Namespace -}}'
spec:
  displayName: '{{.Release.Namespace}}-api-internal'
  virtualHost:
    domains:
    - '{{.Release.Namespace}}-api-internal'
    name: '{{.Release.Namespace}}-api-internal'
    routes:
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/provider_sessions
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        - OPTIONS
        regex: /v1/users/[^/]+/data_sources
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/provider_sessions/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/oauth/[^/]+/authorize
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        regex: /v1/users/[^/]+/data_sets
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images/.+
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-image-9226'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        regex: /v1/oauth/[^/]+/redirect
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        regex: /v1/users/[^/]+/datasets
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        regex: /v1/blobs/[^/]+/content
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-blob-{{.Values.platformBlob.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/data_sources/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/images
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-image-9226'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/restricted_tokens
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - POST
        - DELETE
        regex: /v1/users/[^/]+/blobs
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-blob-{{.Values.platformBlob.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - DELETE
        regex: /v1/users/[^/]+/data
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/blobs/[^/]+
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-blob-{{.Values.platformBlob.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        regex: /v1/tasks/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-task-{{.Values.platformTask.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - DELETE
        regex: /v1/users/[^/*]
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-user-{{.Values.platformUser.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /dataservices/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /userservices/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-user-{{.Values.platformUser.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        prefix: /v1/data_sets
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - POST
        - PUT
        - DELETE
        prefix: /v1/datasets
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - PUT
        - DELETE
        prefix: /v1/images
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-image-9226'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metadata/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-seagull-{{.Values.seagull.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /metrics/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-highwater-{{.Values.highwater.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /confirm/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-hydrophone-{{.Values.hydrophone.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /message/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-message-api-{{.Values.message.api.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /v1/data/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - POST
        prefix: /v1/tasks
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-task-{{.Values.platformTask.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /export/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-export-{{.Values.tide.export.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /access/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-gatekeeper-{{.Values.gatekeeper.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        prefix: /v1/time
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
            namespace: '{{- .Release.Namespace -}}'
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /auth/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-shoreline-{{.Values.shoreline.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /data/
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-tide-whisperer-{{.Values.tide.whisperer.port}}'
            namespace: '{{- .Release.Namespace -}}'
      routePlugins:
        prefixRewrite:
          prefixRewrite: /
--- #file: gloo-app-external-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: '{{.Release.Namespace}}-app-external'
  namespace: '{{- .Release.Namespace -}}'
spec:
  displayName: '{{.Release.Namespace}}-app.tidepool.org'
  sslConfig:
    secretRef:
      name: tidepool-org
      namespace: default
    sniDomains:
    - '{{.Release.Namespace}}-app.tidepool.org'
  virtualHost:
    corsPolicy:
      allowCredentials: true
      allowHeaders:
      - authorization
      - content-type
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      allowMethods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
      allowOriginRegex:
      - '*'
      exposeHeaders:
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      maxAge: 600s
    domains:
    - '{{.Release.Namespace}}-app.tidepool.org'
    name: '{{.Release.Namespace}}-app.tidepool.org'
    routes:
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-blip-{{.Values.blip.port}}'
            namespace: '{{- .Release.Namespace -}}'
--- #file: gloo-app-internal-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: '{{.Release.Namespace}}-app-internal'
  namespace: '{{.Release.Namespace}}'
spec:
  externalName: gateway-proxy.gloo-system.svc.cluster.local
  ports:
  - port: 80
  type: ExternalName
--- #file: gloo-app-internal-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: '{{.Release.Namespace}}-app-internal'
  namespace: '{{- .Release.Namespace -}}'
spec:
  displayName: '{{.Release.Namespace}}-app-internal'
  virtualHost:
    domains:
    - '{{.Release.Namespace}}-app-internal'
    name: '{{.Release.Namespace}}-app-internal'
    routes:
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-blip-{{.Values.blip.port}}'
            namespace: '{{- .Release.Namespace -}}'
--- #file: gloo-blip-{{.Values.blip.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-blip-{{.Values.blip.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: blip
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.blip.port}}'
--- #file: gloo-export-{{.Values.tide.export.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-export-{{.Values.tide.export.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: export
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.tide.export.port}}'
--- #file: gloo-gatekeeper-{{.Values.gatekeeper.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-gatekeeper-{{.Values.gatekeeper.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: gatekeeper
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.gatekeeper.port}}'
--- #file: gloo-highwater-{{.Values.highwater.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-highwater-{{.Values.highwater.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: highwater
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.highwater.port}}'
--- #file: gloo-hydrophone-{{.Values.hydrophone.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-hydrophone-{{.Values.hydrophone.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: hydrophone
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.hydrophone.port}}'
--- #file: gloo-jellyfish-{{.Values.jellyfish.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-jellyfish-{{.Values.jellyfish.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: jellyfish
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.jellyfish.port}}'
--- #file: gloo-message-api-{{.Values.message.api.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-message-api-{{.Values.message.api.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: message-api
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.message.api.port}}'
--- #file: gloo-platform-auth-{{.Values.platformsAuth.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-platform-auth-{{.Values.platformsAuth.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: platform-auth
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.platformsAuth.port}}'
--- #file: gloo-platform-blob-{{.Values.platformBlob.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-platform-blob-{{.Values.platformBlob.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: platform-blob
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.platformBlob.port}}'
--- #file: gloo-platform-data-{{.Values.platformData.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-platform-data-{{.Values.platformData.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: platform-data
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.platformData.port}}'
--- #file: gloo-platform-image-9226-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-platform-image-9226'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: platform-image
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '9226'
--- #file: gloo-platform-task-{{.Values.platformTask.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-platform-task-{{.Values.platformTask.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: platform-task
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.platformTask.port}}'
--- #file: gloo-platform-user-{{.Values.platformUser.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-platform-user-{{.Values.platformUser.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: platform-user
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.platformUser.port}}'
--- #file: gloo-seagull-{{.Values.seagull.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-seagull-{{.Values.seagull.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: seagull
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.seagull.port}}'
--- #file: gloo-shoreline-{{.Values.shoreline.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-shoreline-{{.Values.shoreline.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: shoreline
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.shoreline.port}}'
--- #file: gloo-tide-whisperer-{{.Values.tide.whisperer.port}}-upstream.yaml
apiVersion: gloo.solo.io/v1
kind: Upstream
metadata:
  name: '{{- .Release.Namespace -}}-tide-whisperer-{{.Values.tide.whisperer.port}}'
  namespace: '{{- .Release.Namespace -}}'
spec:
  upstreamSpec:
    kube:
      selector: {}
      serviceName: tide-whisperer
      serviceNamespace: '{{.Release.Namespace}}'
      servicePort: '{{.Values.tide.whisperer.port}}'
--- #file: gloo-uploads-external-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: '{{.Release.Namespace}}-uploads-external'
  namespace: '{{- .Release.Namespace -}}'
spec:
  displayName: '{{.Release.Namespace}}-uploads.tidepool.org'
  sslConfig:
    secretRef:
      name: tidepool-org
      namespace: default
    sniDomains:
    - '{{.Release.Namespace}}-uploads.tidepool.org'
  virtualHost:
    corsPolicy:
      allowCredentials: true
      allowHeaders:
      - authorization
      - content-type
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      allowMethods:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      - OPTIONS
      allowOriginRegex:
      - '*'
      exposeHeaders:
      - x-tidepool-session-token
      - x-tidepool-trace-request
      - x-tidepool-trace-session
      maxAge: 600s
    domains:
    - '{{.Release.Namespace}}-uploads.tidepool.org'
    name: '{{.Release.Namespace}}-uploads.tidepool.org'
    routes:
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-jellyfish-{{.Values.jellyfish.port}}'
            namespace: '{{- .Release.Namespace -}}'
--- #file: gloo-uploads-internal-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: '{{.Release.Namespace}}-uploads-internal'
  namespace: '{{.Release.Namespace}}'
spec:
  externalName: gateway-proxy.gloo-system.svc.cluster.local
  ports:
  - port: 80
  type: ExternalName
--- #file: gloo-uploads-internal-virtualservice.yaml
apiVersion: gateway.solo.io/v1
kind: VirtualService
metadata:
  name: '{{.Release.Namespace}}-uploads-internal'
  namespace: '{{- .Release.Namespace -}}'
spec:
  displayName: '{{.Release.Namespace}}-uploads-internal'
  virtualHost:
    domains:
    - '{{.Release.Namespace}}-uploads-internal'
    name: '{{.Release.Namespace}}-uploads-internal'
    routes:
    - matcher:
        methods:
        - GET
        - OPTIONS
        - POST
        - PUT
        - PATCH
        - DELETE
        prefix: /
      routeAction:
        single:
          upstream:
            name: '{{- .Release.Namespace -}}-jellyfish-{{.Values.jellyfish.port}}'
            namespace: '{{- .Release.Namespace -}}'
{{ end }}

#!/bin/bash 
#
# Get Secret from AWS Secrets Manager
#
# Usage: $0 ${SECRET} ${ENVIRONMENT} ${CLUSTER_NAME}

SECRET=$1
ENVIRONMENT=${2:-${ENVIRONMENT+x}}
CLUSTER_NAME=${3:-${CLUSTER_NAME:+x}}

bad=0
if [ -z "${ENVIRONMENT}"  ]
then
    echo "Must supply enviroment"
    bad=1
fi

if [ -z "${CLUSTER_NAME}" ]
then
    echo "Must supply cluster name"
    bad=1
fi

if [ -z "${SECRET}" ]
then
    echo "Must supply secret name"
    bad=1
fi

if [ $bad -eq 1 ]
then
   echo "Usage: $0 \${SECRET} \${ENVIRONMENT} \${CLUSTER_NAME}"
   exit 1
fi

out=$(aws secretsmanager get-secret-value  --secret-id ${CLUSTER_NAME}/${ENVIRONMENT}/${SECRET} | jq '.SecretString')

val=$(echo "echo $out" | bash)
yaml=$(python -c 'import sys, yaml, json; yaml.safe_dump(json.load(sys.stdin), sys.stdout, default_flow_style=False)' <<< $val)

indented=$(echo "$yaml" | sed -e 's/^/    /')

cat <<!
apiVersion: v1
kind: Secret
type: Opaque
data:
$indented
metadata:
  name: ${SECRET}
  namespace: ${ENVIRONMENT}
!

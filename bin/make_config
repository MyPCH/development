#!/bin/bash
#
# Create Tidepool GitOps config repo
#
# Usage: $0 ${REMOTE_REPO}

default=git@github.com:tidepool-org/cluster-test1
remote=${1:-${REMOTE_REPO:-$default}}

if [ "$remote" == "$default" ]
then
	echo "must provide REMOTE_REPO, e.g. $default"
	#exit  1
fi

remotebase=$(basename $remote)

# create temporary workspace to clone Git repos into
mytmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
cd $mytmpdir

# clone quickstart
git clone git@github.com:/tidepool-org/tidepool-quickstart
QUICKSTART_DIR=$(realpath ./tidepool-quickstart)

git clone git@github.com:/tidepool-org/development
(cd development; git checkout k8s)
DEV_DIR=$(realpath development)
CHART_DIR=$DEV_DIR/charts/tidepool/0.1.7

# clone config repo
git clone $remote
cd $remotebase
CONFIG_DIR=$(realpath .)


# extract values to use for templating
export ClusterName=$(yq r values.yaml cluster.metadata.name)
export Region=$(yq r values.yaml cluster.metadata.region)
export config=$(yq r values.yaml -j)

# run template processor to create non-Tidepool services
cd $QUICKSTART_DIR
for dir in base namespaces
do
  for file in $(find $dir -type f -print)
  do
	echo $file
	mkdir -p $CONFIG_DIR/$(dirname $file)
	mkdir -p $CONFIG_DIR/external-secrets
	if [ "${file: -5}" == ".tmpl" ]
	then
		envtpl $file >$CONFIG_DIR/${file%.tmpl}
        elif [ "${file: -12}" == "-secret.yaml" ]
	then
		$DEV_DIR/bin/external_secret dryrun $ClusterName encoded < $file > $CONFIG_DIR/external-secrets/$(basename $file)
        elif [ "${file: -5}" == ".yaml" ]
	then
		cp $file $CONFIG_DIR/$file
	elif [ "${file: -8}" == ".jsonnet" ]
	then
		jsonnet --tla-code config="$config" $file | yq r - > $CONFIG_DIR/${file%.jsonnet}
	fi
  done
done

jsonnet --tla-code config="$config" ${QUICKSTART_DIR}/eksctl/cluster_config.jsonnet | yq r - > $CONFIG_DIR/config.yaml

# create Tidepool environments
environments=$(yq r values.yaml environments | sed -e "/^  .*/d" -e s/:.*//)
for env in $environments
do
	envdir=$CONFIG_DIR/environments/$env
	mkdir -p $envdir
	jsonnet --tla-code config="$config" --tla-str namespace=$env  ${QUICKSTART_DIR}/tidepool/tidepool-helmrelease.jsonnet | yq r - > $envdir/tidepool-helmrelease.yaml
	jsonnet --tla-code config="$config" --tla-str namespace=$env  ${QUICKSTART_DIR}/tidepool/tidepool-namespace.jsonnet | yq r - > $CONFIG_DIR/namespaces/${env}-namespace.yaml

        mkdir -p $mytmpdir/secrets
	mkdir -p $envdir/external-secrets
        for file in $(find $CHART_DIR -name \*secret.yaml -print)
        do
		helm template --namespace $env --set global.secret.enabled=true $CHART_DIR -f  $CHART_DIR/values.yaml -x $file  | $DEV_DIR/bin/external_secret dryrun $ClusterName encoded > $envdir/external-secrets/$(basename $file)
	done
done

# commit changes to repo
cd $CONFIG_DIR
git add .
git commit -m "Added tidepool environments"
git push
cd /

# clean up
rm -rf $mytmpdir


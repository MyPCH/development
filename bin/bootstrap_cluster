#!/bin/bash 
#
# Create Tidepool GitOps config repo
#
# Usage: $0 ${REMOTE_REPO}

default=git@github.com:tidepool-org/cluster-test1
remote=${1:-${REMOTE_REPO:-$default}}

if [ "$remote" == "$default" ]
then
	echo "must provide REMOTE_REPO, e.g. $default"
	#exit  1
fi

remotebase=$(basename $remote)

# create temporary workspace to clone Git repos into
mytmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
cd $mytmpdir

# clone quickstart
git clone git@github.com:/tidepool-org/tidepool-quickstart
QUICKSTART_DIR=$(realpath ./tidepool-quickstart)

# clone config repo
git clone $remote
cd $remotebase
CONFIG_DIR=$(realpath .)

# extract values to use for templating
export ClusterName=$(yq r values.yaml cluster.metadata.name)
export Region=$(yq r values.yaml cluster.metadata.region)
export config=$(yq r values.yaml -j)
export email=$(yq r values.yaml -j email)

# run template processor to create non-Tidepool services
cd $QUICKSTART_DIR
for dir in base namespaces
do
  for file in $(find $dir -type f -print)
  do
	echo $file
	mkdir -p $CONFIG_DIR/$(dirname $file)
	if [ "${file: -5}" == ".tmpl" ]
	then
		envtpl $file >$CONFIG_DIR/${file%.tmpl}
        elif [ "${file: -5}" == ".yaml" ]
	then
		cp $file $CONFIG_DIR/$file
	elif [ "${file: -8}" == ".jsonnet" ]
	then
		jsonnet --tla-code config="$config" $file | yq r - > $CONFIG_DIR/${file%.jsonnet}
	fi
  done
done

jsonnet --tla-code config="$config" ${QUICKSTART_DIR}/eksctl/cluster_config.jsonnet | yq r - > $CONFIG_DIR/config.yaml

# create cluster, install flux into cluster
eksctl create cluster -f $CONFIG_DIR/config.yaml
eksctl install flux -f $CONFIG_DIR/config.yaml --git-url=${remote}.git --git-email=$email

(cd $CONFIG_DIR; git stash; git pull; git stash apply)

# update flux and helm 
if [ -f $CONFIG_DIR/flux/flux-deployment.yaml ]
then
	yq r $CONFIG_DIR/flux/flux-deployment.yaml -j > $mytmpdir/flux.json
	yq r $CONFIG_DIR/flux/helm-operator--deployment.yaml -j > $mytmpdir/helm.json
        jsonnet  --tla-code-file flux="$mytmpdir/flux.json"  --tla-code-file helm="$mytmpdir/helm.json" $QUICKSTART_DIR/flux/flux.jsonnet >$mytmpdir/updated.json
        yq r $mytmpdir/updated.json flux >$CONFIG_DIR/flux/flux-deployment-updated.yaml
        yq r $mytmpdir/updated.json helm >$CONFIG_DIR/flux/helm-operator-deployment-updated.yaml
fi

# create Tidepool environments
environments=$(yq r values.yaml environments | sed -e "/^  .*/d" -e s/:.*//)
for env in $environments
do
	envdir=$CONFIG_DIR/environments/$env
	mkdir -p $envdir
	jsonnet --tla-code config="$config" --tla-str namespace=$env  ${QUICKSTART_DIR}/tidepool/tidepool-helmrelease.jsonnet | yq r - > $envdir/tidepool-helmrelease.yaml
	jsonnet --tla-code config="$config" --tla-str namespace=$env  ${QUICKSTART_DIR}/tidepool/tidepool-namespace.jsonnet | yq r - > $CONFIG_DIR/namespaces/${env}-namespace.yaml

done

# commit changes to repo
cd $CONFIG_DIR
git add .
git commit -m "Added tidepool environments"
git push
cd /

# clean up
rm -rf $mytmpdir


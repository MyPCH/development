#!/bin/bash 
#
# Create Tidepool GitOps config repo
#
# Usage: $0 ${REMOTE_REPO}

CONFIG_DIR=$(realpath ${1:-.})
mkdir -p $CONFIG_DIR

mytmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
cd $mytmpdir

# clone quickstart
git clone git@github.com:/tidepool-org/tidepool-quickstart
QUICKSTART_DIR=$(realpath ./tidepool-quickstart)

git clone git@github.com:/tidepool-org/development
(cd development; git checkout k8s)
DEV_DIR=$(realpath development)
CHART_DIR=$DEV_DIR/charts/tidepool/0.1.7

# run template processor to create non-Tidepool services
cd $QUICKSTART_DIR
export ClusterName=$(yq r values.yaml cluster.metadata.name)

mkdir -p $CONFIG_DIR/external-secrets
for dir in base namespaces
do
  for file in $(find $dir -type f -print)
  do
	if [ "${file: -12}" == "-secret.yaml" ]
	then
		$DEV_DIR/bin/external_secret dryrun $ClusterName encoded < $file > $CONFIG_DIR/external-secrets/$(basename $file)
	fi
  done
done

# create secrets
environments=$(yq r values.yaml environments | sed -e "/^  .*/d" -e s/:.*//)
for env in $environments
do
	envdir=$CONFIG_DIR/environments/$env
	mkdir -p $envdir/external-secrets
        for file in $(find $CHART_DIR -name \*secret.yaml -print)
        do
		helm template --namespace $env --set global.secret.enabled=true $CHART_DIR -f  $CHART_DIR/values.yaml -x $file  | $DEV_DIR/bin/external_secret dryrun $ClusterName encoded > $envdir/external-secrets/$(basename $file)
	done
done

rm -rf $mytmpdir

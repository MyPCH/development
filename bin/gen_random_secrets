#!/bin/bash
#
# Generate random secrets template
#
# Usage: $0 [$REMOTE_REPO]


red=`tput setaf 1`
green=`tput setaf 2`
magenta=`tput setaf 5`
reset=`tput sgr0`


REMOTE_REPO=${1:-$REMOTE_REPO}

if [ -z "$REMOTE_REPO" ]
then
        echo "${red}[x] must provide REMOTE_REPO${reset}"
        exit 1
fi

if [[ $REMOTE_REPO = git@github.com* ]]
then
        remote=$REMOTE_REPO
else
        remote="git@github.com:tidepool-org/$REMOTE_REPO"
fi

remotebase=$(basename $remote)

# create temporary workspace to clone Git repos into
mytmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
trap "rm -rf $mytmpdir" EXIT
pushd $mytmpdir

# clone quickstart
git clone git@github.com:/tidepool-org/tidepool-quickstart >/dev/null 2>&1
QUICKSTART_DIR=$(realpath ./tidepool-quickstart)

git clone git@github.com:/tidepool-org/development >/dev/null 2>&1
(cd development; git checkout k8s >/dev/null 2>&1)
DEV_DIR=$(realpath development)
CHART_DIR=$DEV_DIR/charts/tidepool

# clone config repo
git clone $remote >/dev/null 2>&1
cd $remotebase
CONFIG_DIR=$(realpath .)

# create Tidepool environments
environments=$(yq r values.yaml environments | sed -e "/^  .*/d" -e s/:.*//)
for env in $environments
do
        for file in $(find $CHART_DIR -name \*secret.yaml -print)
        do
		helm template --namespace $env --set global.secret.generated=true $CHART_DIR  -f  $CHART_DIR/values.yaml -x $file   >x
		grep "kind" x >/dev/null 2>&1
		if [ $? -eq 0 ]
		then 
			cat x 
		fi
		rm x
	done
done

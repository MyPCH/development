# Copy to `local/Tiltconfig.yaml` and update as needed
# To run local development images for the tidepool services, uncomment the `image` and `hostPath`
# parameters, and update the `hostPath` if you've checked the repo out to a different location.

### Global Config Start ###
tidepool_helm_charts_version: '0.1.5' # Version of the Tidepool helm charts to deploy.

global:
  hosts:
    default:
      protocol: http
      host: "localhost:3000"
    http:
      dnsNames:
      - localhost
      port: '3000'
    https:
      enabled: false
  ports:
    viz:
      stories: 8083
      typestories: 8082
  resources: # Turn off resourse limits for development
    limits:
      cpu: null
      memory: null
    requests:
      cpu: null
      memory: null
  secrets:
    hostPath: './local/secrets'
    dexcomClientId: ""
    dexcomClientSecret: ""
  securityContext:
    allowPrivilegeEscalation: false
    runAsNonRoot: true
    runAsUser: 1000
    capabilities:
      drop:
      - ALL
### Global Config End ###

### Gateway Config Start ###
gateway-proxy:
  portForwards: ['3000']

gloo:
  gatewayProxies:
    gateway-proxy:
      service:
        httpPort: 3000
### Gateway Config End ###

### MongoDB Config Start ###
mongodb:
  enabled: false # We deploy our own directly within the Tiltfile
  hostPath: '/data/db' # Note: this path is relative to the k8s server container defined in `docker-compose.k8s.yml`. Local machine path is volume-mounted using the TIDEPOOL_DOCKER_MONGO_VOLUME environment variable.
### MongoDB Config End ###

### Tidepool Services Config Start ###
auth:
  # image: tidepool-k8s-auth
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.auth'
  restartCommand: 'make service-restart'

blip:
  # image: tidepool-k8s-blip
  # hostPath: ../blip
  containerPath: '/app'
  apiHost: 'http://localhost:3000'
  webpackDevTool: cheap-module-eval-source-map
  webpackPublicPath: 'http://localhost:3000'
  linkedPackages:
    - name: tideline
      packageName: tideline
      hostPath: ../tideline
      enabled: false

    - name: tidepool-platform-client
      packageName: tidepool-platform-client
      hostPath: ../platform-client
      enabled: false

    - name: viz
      packageName: '@tidepool/viz'
      hostPath: ../viz
      enabled: false

blob:
  # image: tidepool-k8s-blob
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.blob'
  restartCommand: 'make service-restart'

data:
  # image: tidepool-k8s-data
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.data'
  restartCommand: 'make service-restart'

export:
  # image: tidepool-k8s-export
  # hostPath: ../export
  containerPath: '/app'
  restartCommand: 'touch service-restart'

gatekeeper:
  # image: tidepool-k8s-gatekeeper
  # hostPath: ../gatekeeper
  containerPath: '/app'
  restartCommand: 'touch service-restart'

highwater:
  # image: tidepool-k8s-highwater
  # hostPath: ../highwater
  containerPath: '/app'
  restartCommand: 'touch service-restart'

hydrophone:
  # image: tidepool-k8s-hydrophone
  # hostPath: '~/go/src/github.com/tidepool-org/hydrophone'
  containerPath: '/go/src/github.com/tidepool-org/hydrophone'
  restartCommand: './build.sh'
  restartContainer: true

image:
  # image: tidepool-k8s-image
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.image'
  restartCommand: 'make service-restart'

jellyfish:
  # image: tidepool-k8s-jellyfish
  # hostPath: ../jellyfish
  containerPath: '/app'
  restartCommand: 'touch service-restart'

message-api:
  # image: tidepool-k8s-message-api
  # hostPath: ../message-api
  containerPath: '/app'
  restartCommand: 'touch service-restart'

migrations:
  # image: tidepool-k8s-migrations
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.migrations'
  restartCommand: 'make service-restart'

notification:
  # image: tidepool-k8s-notification
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.notification'
  restartCommand: 'make service-restart'

seagull:
  # image: tidepool-k8s-seagull
  # hostPath: ../seagull
  containerPath: '/app'
  restartCommand: 'touch service-restart'

shoreline:
  # image: tidepool-k8s-shoreline
  # hostPath: '~/go/src/github.com/tidepool-org/shoreline'
  containerPath: '/go/src/github.com/tidepool-org/shoreline'
  restartCommand: './build.sh'
  restartContainer: true

task:
  # image: tidepool-k8s-task
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.task'
  restartCommand: 'make service-restart'

tidewhisperer:
  # image: tidepool-k8s-tidewhisperer
  # hostPath: '~/go/src/github.com/tidepool-org/tide-whisperer'
  containerPath: '/go/src/github.com/tidepool-org/tide-whisperer'
  restartCommand: './build.sh'
  restartContainer: true

tools:
  # image: tidepool-k8s-tools
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.tools'
  restartCommand: 'make service-restart'

user:
  # image: tidepool-k8s-user
  # hostPath: '~/go/src/github.com/tidepool-org/platform'
  containerPath: '/go/src/github.com/tidepool-org/platform'
  dockerFile: 'Dockerfile.user'
  restartCommand: 'make service-restart'
### Tidepool Services Config End ###

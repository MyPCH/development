apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose.yml convert
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: shoreline
    helm.sh/chart: {{ include "charts.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "charts.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  name: shoreline
  namespace: {{.Release.Namespace}}
spec:
  selector:
    matchLabels:
      io.kompose.service: shoreline
      app.kubernetes.io/name: {{ include "charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: shoreline
        app.kubernetes.io/name: {{ include "charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{ include "charts.init.mongo" .}}
      containers:
      - env:
        - name: SERVER_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: secret
        - name: API_SECRET
          valueFrom:
            secretKeyRef:
              name: server-secret
              key: api
        - name: MAILCHIMP_APIKEY
          valueFrom:
            secretKeyRef:
              name: mailchimp
              key: apikey
        - name: TIDEPOOL_SHORELINE_ENV
          value: |
            {
                "gatekeeper": {"serviceSpec": {"type": "static", "hosts": ["http://{{.Values.gatekeeper.host}}:{{.Values.gatekeeper.port}}"]}},
                "hakken": {
                  "host": "{{.Values.hakken.host}}:{{.Values.hakken.port}}",
                  "skipHakken": {{.Values.hakken.skip}}
                },
                "highwater": {
                    "metricsSource": "shoreline",
                    "metricsVersion": "v0.0.1",
                    "name": "highwater",
                    "serviceSpec": {"type": "static", "hosts": ["http://{{.Values.highwater.host}}:{{.Values.highwater.port}}"]}
                }
            }
        - name: TIDEPOOL_SHORELINE_SERVICE
          value: |
            {
                "mongo": {
                    "connectionString": "mongodb://{{include "charts.mongo.start" .}}/user{{include "charts.mongo.end" .}}}"
                },
                "oauth2": {
                    "expireDays": 14
                },
                "service": {
                    "certFile": "config/cert.pem",
                    "host": "localhost:{{.Values.shoreline.port}}",
                    "keyFile": "config/key.pem",
                    "protocol": "http",
                    "service": "shoreline"
                },
                "user": {
                    "clinicDemoUserId": "",
                    "longTermDaysDuration": 30,
                    "longTermKey": "{{.Values.shoreline.longtermkey}}",
                    "salt": "{{.Values.shoreline.salt}}",
                    "tokenDurationSecs": 2592000,
                    "verificationSecret": "{{.Values.shoreline.verification.secret}}",
                    "mailchimp": {
                      "url": "{{.Values.shoreline.mailchimp.url}}",
                      "apiKey": ""
                    }
                }
            }
        image: "{{ .Values.shoreline.image }}"
        livenessProbe:
          httpGet:
            path: /status
            port: {{.Values.shoreline.port}}
          initialDelaySeconds: 3
          periodSeconds: 10
        name: shoreline
        ports:
        - containerPort: {{.Values.shoreline.port}}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      restartPolicy: Always
status: {}

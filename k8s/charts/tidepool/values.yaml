nameOverride: ""
fullnameOverride: ""
domain: "tidepool.org"
environment: production
includeSecrets: true
usessl: true
resources:
  {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

ambassador:
  enabled: true
  fullnameOverride: ambassador
  replicaCount: 1
  service:
    http:
      port: 80
    https:
      port: 443
    securityContext:
      runAsNonRoot: false
    externalTrafficPolicy: Local
    annotations:
      sidecar.istio.io/inject: "false"
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
      getambassador.io/config: |
        ---
        apiVersion: ambassador/v1
        kind: Module
        name: tls
        config:
          server:
            secret: ambassador-certs
            enabled: True
            redirect_cleartext_from: 8080
        --- 
        apiVersion: ambassador/v1
        kind:  Module
        name:  ambassador
        config:
          service_port: 8443
          use_proxy_proto: false
          use_remote_address: true
          x_forwarded_proto_redirect: true
          cors:
            origins: "*"
            methods: "GET, POST, PUT, PATCH, DELETE"
            headers:  "authorization, content-type, x-tidepool-session-token, x-tidepool-trace-request, x-tidepool-trace-session"
            credentials: true
            exposed_headers: "x-tidepool-session-token, x-tidepool-trace-request, x-tidepool-trace-session"
            max_age: "0"
            
gloo:
  enabled: false
  namespace:
    create: true
image:
  pullPolicy: IfNotPresent
blip: 
  port: '3000'
  image: tidepool/blip:v1.14.1
export:
  host: export
  image: tidepool/export:v1.3.2
  port: '9300'
gatekeeper: 
  image: tidepool/gatekeeper:latest
  host: gatekeeper
  port: '9123'
hakken: 
  image: tidepool/hakken:noHakken
  host: hakken
  port: '8000'
  skip: true
highwater: 
  image: tidepool/highwater:latest
  host: highwater
  port: '9191'
  salt: gf78fSEI7tOQQP9xfXMO9HfRyMnW4Sx88Q
hydrophone:
  image: tidepool/hydrophone:develop-2e69bbc
  assetUrl: 'https://s3-us-west-2.amazonaws.com/tidepool-dev-asset'
  ses:
    fromAddress: ''
    serverEndpoint: 'https://email.us-west-2.amazonaws.com'
  from: {address: ''}
  host: hydrophone
  port: '9157'
jellyfish: 
  image: tidepool/jellyfish:latest
  port: '9122'
  salt: 'itNkczadZ1EeC9fUWR3LnbKFagtYYLOk'
messageapi: 
  image: tidepool/message-api:latest
  host: message-api
  port: '9119'
mailhog:
  image: mailhog/mailhog:latest
  ports:
    smtp: '1025'
    http: '8025'
  volume: mailhog1
mongo: 
  enabled: true
  host: 'mongodb'
  port: '27017'
  tls: 'false'
platformAuth:
  image: tidepool/platform-auth:quiet
  host: platform-auth
  port: '9222'
platformBlob:
  image: tidepool/platform-blob:quiet
  host: platform-blob
  port: '9225'
  service:
    unstructured:
      store:
        file: {directory: "_data/blobs"}
        s3: {bucket: "", prefix: ""}
        type: file
platformData:
  image: tidepool/platform-data:quiet
  host: platform-data
  port: '9220'
platformImage:
  image: tidepool/platform-image:1.31.0-release.1
  host: platform-image
  port: '9226'
  service:
    unstructured:
      store:
        file: {directory: "_data/image"}
        s3: {bucket: "", prefix: ""}
        type: file
platformMigrations:
  image: tidepool/platform-migrations:quiet
platformNotification:
  image: tidepool/platform-notification:quiet
  host: platform-notification
  port: '9223'
platformTask:
  image: tidepool/platform-task:quiet
  host: platform-task
  port: '9224'
platformTools:
  image: tidepool/platform-tools:quiet
platformUser:
  image: tidepool/platform-user:quiet
  host: platform-user
  port: '9221'
seagull: 
  image: tidepool/seagull:master-1797f22
  host: seagull
  port: '9120'
  salt: KEWRWBe5yyMnW4SxosfZ2EkbZHkyqJ5f
service:
  provider:
    dexcom:
      token: { url: 'https://api.dexcom.com/v1/oauth2/token' }
      authorize: { url: 'https://api.dexcom.com/v1/oauth2/login' }
      client: {id: '', secret: '', address: "https://api.dexcom.com" }
      state: {salt: 'Encryption salt to generate state parameter during OAuth workflow'}
shoreline:
  image: tidepool/shoreline:develop-ba7f1a7
  host: shoreline
  longtermkey: abcdefghijklmnopqrstuvwxyz
  port: '9107'
  salt: ADihSEI7tOQQP9xfXMO9HfRpXKu1NpIJ
  verification: {secret: +skip}
tidewhisperer:
  image: tidepool/tide-whisperer:develop-a572827
  host: tide-whisperer
  port: '9127'


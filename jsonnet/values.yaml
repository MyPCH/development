company: 
  email: derrick@tidepool.org
  domain: tidepool.org

github:
  account: tidepool-org                       # your GitHub account
  user: derrickburns                          # your GitHub user name
  token: ""                                   # a token that allows write/create access to your GitHub account

slack:
  username: derrickburns

cluster:
  repo:
    directory: "/Users/derrickburns/go/src/github.com/tidepool-org"
    name: ""                                    # OPTIONAL: name of the repo
    branch: master
  eks: # new level
    iam:
      administrators: # was iamUsers and string
      - derrickburns-cli
      - lennartgoedhard-cli
      - benderr-cli
    configFile: ""                              # location of configuration file
    kubeconfig: ""
    name: "shared"                              # the name of the cluster
    k8sVersion: "1.13"                          # the Kubernetes version >= 1.13
    region: "us-west-2"                         # AWS region to deploy in
    cidr: "10.44.0.0/16"                        # CIDR of AWS VPC
    nodegroup:
      instanceType: "m4.large"
      desiredCapacity: 3
      minSize: 1
      maxSize: 10
  logLevel: debug                               # the default log level for all services
  mesh:
    name: linkerd
    create: false
  gateway:                                                          
    proxy:                                                            
      name: gateway-proxy-v2                                             
      namespace: gloo-system  

tidepool:
  services:
    qa1:
      namespace:
        create: true
      helmrelease:
        create: true
      gitops: 
        automated: true
        selector: glob
        filter: "develop-*"
        #selector: regex
        #filter: "^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$"
      secrets:
        src: helm
        dest: awsSecretsManager
        operation: upsert
      values:
        global:
          hosts:
            default:
              protocol: https                                                 # the protocol to use for signup emails
            http:                                                            
              enabled: false
            https:                                                           
              enabled: true 
              port: "443"                                                    # default HTTPS port - must be quoted
              dnsNames:                                                      # list of DNS names
              - qa1.tidepool.org
              certificateIssuer: "letsencrypt-staging"                       # the name of the certificate issuer
          store: 
            type: s3                                                         
          nodeEnvironment: production                   
        mongo:  
          secret:
            data_:
              Scheme: mongodb
              Addresses: cluster0-shard-00-01-hu2cn.mongodb.net:27017,cluster0-shard-00-00-hu2cn.mongodb.net:27017,cluster0-shard-00-02-hu2cn.mongodb.net:27017
              Username: derrickburns
              Tls: "true"
              Password: ""
              Database: ""
        gloo:
          enabled: false
        mongodb:
          enabled: false

services:
  kiam:
    namespace: 
      name: default
      create: false
    helmrelease:
      create: true
  
  externalSecrets:
    namespace: 
      name: default
      create: false
    helmrelease:
      create: true

  autoscaler:
    namespace: 
      name: autoscaler
      create: true
    helmrelease:
      create: true
  
  certmanager:
    namespace:
      name: certmanager
      create: true
    helmrelease:
      create: true
    clusterIssuer:
      create: true
  
  externalDNS:
    namespace:
      name: externalDNS
      create: true
    helmrelease:
      create: true
    values:
      tag: latest
      
  fluxcloud:
    namespace:
      name: flux
      create: false
    helmrelease:
      create: false
    secret:
      create: false
      name: "slack"
      data_:
        url: ""
  
  gloo:
    namespace: 
      name: gloo-system
      create: true
    gateway:
      create: true
    gatewayProxy:
      hostnames: []
    helmrelease:
      create: true
    crds:
      create: false
  
  metricsServer:
    namespace:
      name: monitoring
      create: false
    helmrelease:
      create: true
  
  prometheusOperator:
    namespace:
      name: monitoring
      create: true
    helmrelease:
      create: true
    values:
      prometheus:
        replicaCount: 2
        retention: 12h
  
  thanos:
    secret:
      create: true
      name: thanos-objstore-config
      values:
        bucket: tidepool-thanos
    deployment:
      tag: "v0.3.1"
  
  reloader:
    namespace:
      name: reloader
      create: true
    helmrelease:
      create: true
  
  sumologic:
    namespace:
      name: sumologic
      create: true
    helmrelease:
      create: false
    secret:
      create: false
      name: "sumologic"
      data_:
        collectorUrl: ""
  
  datadog:
    namespace:
      name: monitoring
      create: false
    helmrelease:
      create: true
    secret:
      create: false
      name: "datadog"
      data_:
        apiKey: ""
        appKey: ""
        token: ""
  
  kubeStateMetrics:
    namespace:
      name: monitoring
      create: false
    helmrelease:
      create: true
local kube = import 'kube.jsonnet';
local obj = import 'obj.jsonnet';

local secrets(config) = (


  local holderSecrets(namespace, holder) = (
    local toSecret(name, group) = (
      if std.objectHas(group, 'secret') &&
         group.secret.create &&
         std.objectHas(group.secret, 'data_')
      then kube.secret(config, group, namespace)
    );

    obj.values(std.prune(std.mapWithKey(toSecret, holder.groups)))
  );

  std.flattenArrays(obj.values(std.mapWithKey(holderSecrets, config.tidepool.groups))) +
  holderSecrets('default', config)
);

function(config) secrets(config)

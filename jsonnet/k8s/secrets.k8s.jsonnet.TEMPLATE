local helpers = import 'helpers.jsonnet';

local secrets(config) = (


  local holderSecrets(namespace, holder) = (
    local toSecret(name, group) = (
      local withname = group { name: name };
      if std.objectHas(group, 'secret') && group.secret.create
      then helpers.secret(config, namespace, withname)
    );

    helpers.values(std.prune(std.mapWithKey(toSecret, holder.groups)))
  );

  std.flattenArrays(helpers.values(std.mapWithKey(holderSecrets, config.tidepool.groups))) +
  holderSecrets("default", config)
);

function(config) secrets(config)